{"version":3,"file":"mapbox-gl-draw-snap-mode.esm.js","mappings":"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","sources":["webpack://mapbox-gl-draw-snap-mode/./node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/bbox/dist/js/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/helpers/dist/js/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/meta/dist/js/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/geojson-rbush/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/rbush/rbush.min.js","webpack://mapbox-gl-draw-snap-mode/webpack/bootstrap","webpack://mapbox-gl-draw-snap-mode/webpack/runtime/compat get default export","webpack://mapbox-gl-draw-snap-mode/webpack/runtime/define property getters","webpack://mapbox-gl-draw-snap-mode/webpack/runtime/global","webpack://mapbox-gl-draw-snap-mode/webpack/runtime/hasOwnProperty shorthand","webpack://mapbox-gl-draw-snap-mode/webpack/runtime/make namespace object","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/helpers/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/invariant/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/boolean-point-in-polygon/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/meta/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/line-segment/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/line-intersect/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/polygon-to-line/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/boolean-disjoint/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/distance/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/bearing/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/destination/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/nearest-point-on-line/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/clone/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/nearest-point/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/midpoint/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./src/utils/index.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/bbox-polygon/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./src/modes/snap_point.js","webpack://mapbox-gl-draw-snap-mode/./src/modes/snap_line.js","webpack://mapbox-gl-draw-snap-mode/./src/modes/snap_polygon.js","webpack://mapbox-gl-draw-snap-mode/./node_modules/@turf/boolean-intersects/dist/es/index.js","webpack://mapbox-gl-draw-snap-mode/./src/modes/snap_direct_select.js","webpack://mapbox-gl-draw-snap-mode/./src/utils/customDrawStyles.js"],"sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).MapboxDraw=e()}(this,(function(){\"use strict\";var t=function(t,e){var n={drag:[],click:[],mousemove:[],mousedown:[],mouseup:[],mouseout:[],keydown:[],keyup:[],touchstart:[],touchmove:[],touchend:[],tap:[]},o={on:function(t,e,o){if(void 0===n[t])throw new Error(\"Invalid event type: \"+t);n[t].push({selector:e,fn:o})},render:function(t){e.store.featureChanged(t)}},r=function(t,r){for(var i=n[t],a=i.length;a--;){var s=i[a];if(s.selector(r)){s.fn.call(o,r)||e.store.render(),e.ui.updateMapClasses();break}}};return t.start.call(o),{render:t.render,stop:function(){t.stop&&t.stop()},trash:function(){t.trash&&(t.trash(),e.store.render())},combineFeatures:function(){t.combineFeatures&&t.combineFeatures()},uncombineFeatures:function(){t.uncombineFeatures&&t.uncombineFeatures()},drag:function(t){r(\"drag\",t)},click:function(t){r(\"click\",t)},mousemove:function(t){r(\"mousemove\",t)},mousedown:function(t){r(\"mousedown\",t)},mouseup:function(t){r(\"mouseup\",t)},mouseout:function(t){r(\"mouseout\",t)},keydown:function(t){r(\"keydown\",t)},keyup:function(t){r(\"keyup\",t)},touchstart:function(t){r(\"touchstart\",t)},touchmove:function(t){r(\"touchmove\",t)},touchend:function(t){r(\"touchend\",t)},tap:function(t){r(\"tap\",t)}}};function e(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}function n(t){if(t.__esModule)return t;var e=t.default;if(\"function\"==typeof e){var n=function t(){if(this instanceof t){var n=[null];n.push.apply(n,arguments);var o=Function.bind.apply(e,n);return new o}return e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,\"__esModule\",{value:!0}),Object.keys(t).forEach((function(e){var o=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,o.get?o:{enumerable:!0,get:function(){return t[e]}})})),n}var o={},r={RADIUS:6378137,FLATTENING:1/298.257223563,POLAR_RADIUS:6356752.3142},i=r;function a(t){var e=0;if(t&&t.length>0){e+=Math.abs(s(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(s(t[n]))}return e}function s(t){var e,n,o,r,a,s,c=0,l=t.length;if(l>2){for(s=0;s<l;s++)s===l-2?(o=l-2,r=l-1,a=0):s===l-1?(o=l-1,r=0,a=1):(o=s,r=s+1,a=s+2),e=t[o],n=t[r],c+=(u(t[a][0])-u(e[0]))*Math.sin(u(n[1]));c=c*i.RADIUS*i.RADIUS/2}return c}function u(t){return t*Math.PI/180}o.geometry=function t(e){var n,o=0;switch(e.type){case\"Polygon\":return a(e.coordinates);case\"MultiPolygon\":for(n=0;n<e.coordinates.length;n++)o+=a(e.coordinates[n]);return o;case\"Point\":case\"MultiPoint\":case\"LineString\":case\"MultiLineString\":return 0;case\"GeometryCollection\":for(n=0;n<e.geometries.length;n++)o+=t(e.geometries[n]);return o}},o.ring=s;var c={CONTROL_BASE:\"mapboxgl-ctrl\",CONTROL_PREFIX:\"mapboxgl-ctrl-\",CONTROL_BUTTON:\"mapbox-gl-draw_ctrl-draw-btn\",CONTROL_BUTTON_LINE:\"mapbox-gl-draw_line\",CONTROL_BUTTON_POLYGON:\"mapbox-gl-draw_polygon\",CONTROL_BUTTON_POINT:\"mapbox-gl-draw_point\",CONTROL_BUTTON_TRASH:\"mapbox-gl-draw_trash\",CONTROL_BUTTON_COMBINE_FEATURES:\"mapbox-gl-draw_combine\",CONTROL_BUTTON_UNCOMBINE_FEATURES:\"mapbox-gl-draw_uncombine\",CONTROL_GROUP:\"mapboxgl-ctrl-group\",ATTRIBUTION:\"mapboxgl-ctrl-attrib\",ACTIVE_BUTTON:\"active\",BOX_SELECT:\"mapbox-gl-draw_boxselect\"},l={HOT:\"mapbox-gl-draw-hot\",COLD:\"mapbox-gl-draw-cold\"},d={ADD:\"add\",MOVE:\"move\",DRAG:\"drag\",POINTER:\"pointer\",NONE:\"none\"},p={POLYGON:\"polygon\",LINE:\"line_string\",POINT:\"point\"},f={FEATURE:\"Feature\",POLYGON:\"Polygon\",LINE_STRING:\"LineString\",POINT:\"Point\",FEATURE_COLLECTION:\"FeatureCollection\",MULTI_PREFIX:\"Multi\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\"},h={DRAW_LINE_STRING:\"draw_line_string\",DRAW_POLYGON:\"draw_polygon\",DRAW_POINT:\"draw_point\",SIMPLE_SELECT:\"simple_select\",DIRECT_SELECT:\"direct_select\",STATIC:\"static\"},g={CREATE:\"draw.create\",DELETE:\"draw.delete\",UPDATE:\"draw.update\",SELECTION_CHANGE:\"draw.selectionchange\",MODE_CHANGE:\"draw.modechange\",ACTIONABLE:\"draw.actionable\",RENDER:\"draw.render\",COMBINE_FEATURES:\"draw.combine\",UNCOMBINE_FEATURES:\"draw.uncombine\"},y={MOVE:\"move\",CHANGE_COORDINATES:\"change_coordinates\"},v={FEATURE:\"feature\",MIDPOINT:\"midpoint\",VERTEX:\"vertex\"},m={ACTIVE:\"true\",INACTIVE:\"false\"},_=[\"scrollZoom\",\"boxZoom\",\"dragRotate\",\"dragPan\",\"keyboard\",\"doubleClickZoom\",\"touchZoomRotate\"],b=-85,E=Object.freeze({__proto__:null,classes:c,sources:l,cursors:d,types:p,geojsonTypes:f,modes:h,events:g,updateActions:y,meta:v,activeStates:m,interactions:_,LAT_MIN:-90,LAT_RENDERED_MIN:b,LAT_MAX:90,LAT_RENDERED_MAX:85,LNG_MIN:-270,LNG_MAX:270}),T={Point:0,LineString:1,MultiLineString:1,Polygon:2};function C(t,e){var n=T[t.geometry.type]-T[e.geometry.type];return 0===n&&t.geometry.type===f.POLYGON?t.area-e.area:n}function O(t){return t.map((function(t){return t.geometry.type===f.POLYGON&&(t.area=o.geometry({type:f.FEATURE,property:{},geometry:t.geometry})),t})).sort(C).map((function(t){return delete t.area,t}))}function S(t,e){return void 0===e&&(e=0),[[t.point.x-e,t.point.y-e],[t.point.x+e,t.point.y+e]]}function I(t){if(this._items={},this._nums={},this._length=t?t.length:0,t)for(var e=0,n=t.length;e<n;e++)this.add(t[e]),void 0!==t[e]&&(\"string\"==typeof t[e]?this._items[t[e]]=e:this._nums[t[e]]=e)}I.prototype.add=function(t){return this.has(t)||(this._length++,\"string\"==typeof t?this._items[t]=this._length:this._nums[t]=this._length),this},I.prototype.delete=function(t){return!1===this.has(t)||(this._length--,delete this._items[t],delete this._nums[t]),this},I.prototype.has=function(t){return(\"string\"==typeof t||\"number\"==typeof t)&&(void 0!==this._items[t]||void 0!==this._nums[t])},I.prototype.values=function(){var t=this,e=[];return Object.keys(this._items).forEach((function(n){e.push({k:n,v:t._items[n]})})),Object.keys(this._nums).forEach((function(n){e.push({k:JSON.parse(n),v:t._nums[n]})})),e.sort((function(t,e){return t.v-e.v})).map((function(t){return t.k}))},I.prototype.clear=function(){return this._length=0,this._items={},this._nums={},this};var x=[v.FEATURE,v.MIDPOINT,v.VERTEX],M={click:function(t,e,n){return L(t,e,n,n.options.clickBuffer)},touch:function(t,e,n){return L(t,e,n,n.options.touchBuffer)}};function L(t,e,n,o){if(null===n.map)return[];var r=t?S(t,o):e,i={};n.options.styles&&(i.layers=n.options.styles.map((function(t){return t.id})));var a=n.map.queryRenderedFeatures(r,i).filter((function(t){return-1!==x.indexOf(t.properties.meta)})),s=new I,u=[];return a.forEach((function(t){var e=t.properties.id;s.has(e)||(s.add(e),u.push(t))})),O(u)}function N(t,e){var n=M.click(t,null,e),o={mouse:d.NONE};return n[0]&&(o.mouse=n[0].properties.active===m.ACTIVE?d.MOVE:d.POINTER,o.feature=n[0].properties.meta),-1!==e.events.currentModeName().indexOf(\"draw\")&&(o.mouse=d.ADD),e.ui.queueMapClasses(o),e.ui.updateMapClasses(),n[0]}function A(t,e){var n=t.x-e.x,o=t.y-e.y;return Math.sqrt(n*n+o*o)}function P(t,e,n){void 0===n&&(n={});var o=null!=n.fineTolerance?n.fineTolerance:4,r=null!=n.grossTolerance?n.grossTolerance:12,i=null!=n.interval?n.interval:500;t.point=t.point||e.point,t.time=t.time||e.time;var a=A(t.point,e.point);return a<o||a<r&&e.time-t.time<i}function F(t,e,n){void 0===n&&(n={});var o=null!=n.tolerance?n.tolerance:25,r=null!=n.interval?n.interval:250;return t.point=t.point||e.point,t.time=t.time||e.time,A(t.point,e.point)<o&&e.time-t.time<r}var w={exports:{}},R=w.exports=function(t,e){if(e||(e=16),void 0===t&&(t=128),t<=0)return\"0\";for(var n=Math.log(Math.pow(2,t))/Math.log(e),o=2;n===1/0;o*=2)n=Math.log(Math.pow(2,t/o))/Math.log(e)*o;var r=n-Math.floor(n),i=\"\";for(o=0;o<Math.floor(n);o++){i=Math.floor(Math.random()*e).toString(e)+i}if(r){var a=Math.pow(e,r);i=Math.floor(Math.random()*a).toString(e)+i}var s=parseInt(i,e);return s!==1/0&&s>=Math.pow(2,t)?R(t,e):i};R.rack=function(t,e,n){var o=function(o){var i=0;do{if(i++>10){if(!n)throw new Error(\"too many ID collisions, use more bits\");t+=n}var a=R(t,e)}while(Object.hasOwnProperty.call(r,a));return r[a]=o,a},r=o.hats={};return o.get=function(t){return o.hats[t]},o.set=function(t,e){return o.hats[t]=e,o},o.bits=t||128,o.base=e||16,o};var D=e(w.exports),k=function(t,e){this.ctx=t,this.properties=e.properties||{},this.coordinates=e.geometry.coordinates,this.id=e.id||D(),this.type=e.geometry.type};k.prototype.changed=function(){this.ctx.store.featureChanged(this.id)},k.prototype.incomingCoords=function(t){this.setCoordinates(t)},k.prototype.setCoordinates=function(t){this.coordinates=t,this.changed()},k.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.coordinates))},k.prototype.setProperty=function(t,e){this.properties[t]=e},k.prototype.toGeoJSON=function(){return JSON.parse(JSON.stringify({id:this.id,type:f.FEATURE,properties:this.properties,geometry:{coordinates:this.getCoordinates(),type:this.type}}))},k.prototype.internal=function(t){var e={id:this.id,meta:v.FEATURE,\"meta:type\":this.type,active:m.INACTIVE,mode:t};if(this.ctx.options.userProperties)for(var n in this.properties)e[\"user_\"+n]=this.properties[n];return{type:f.FEATURE,properties:e,geometry:{coordinates:this.getCoordinates(),type:this.type}}};var U=function(t,e){k.call(this,t,e)};(U.prototype=Object.create(k.prototype)).isValid=function(){return\"number\"==typeof this.coordinates[0]&&\"number\"==typeof this.coordinates[1]},U.prototype.updateCoordinate=function(t,e,n){this.coordinates=3===arguments.length?[e,n]:[t,e],this.changed()},U.prototype.getCoordinate=function(){return this.getCoordinates()};var j=function(t,e){k.call(this,t,e)};(j.prototype=Object.create(k.prototype)).isValid=function(){return this.coordinates.length>1},j.prototype.addCoordinate=function(t,e,n){this.changed();var o=parseInt(t,10);this.coordinates.splice(o,0,[e,n])},j.prototype.getCoordinate=function(t){var e=parseInt(t,10);return JSON.parse(JSON.stringify(this.coordinates[e]))},j.prototype.removeCoordinate=function(t){this.changed(),this.coordinates.splice(parseInt(t,10),1)},j.prototype.updateCoordinate=function(t,e,n){var o=parseInt(t,10);this.coordinates[o]=[e,n],this.changed()};var V=function(t,e){k.call(this,t,e),this.coordinates=this.coordinates.map((function(t){return t.slice(0,-1)}))};(V.prototype=Object.create(k.prototype)).isValid=function(){return 0!==this.coordinates.length&&this.coordinates.every((function(t){return t.length>2}))},V.prototype.incomingCoords=function(t){this.coordinates=t.map((function(t){return t.slice(0,-1)})),this.changed()},V.prototype.setCoordinates=function(t){this.coordinates=t,this.changed()},V.prototype.addCoordinate=function(t,e,n){this.changed();var o=t.split(\".\").map((function(t){return parseInt(t,10)}));this.coordinates[o[0]].splice(o[1],0,[e,n])},V.prototype.removeCoordinate=function(t){this.changed();var e=t.split(\".\").map((function(t){return parseInt(t,10)})),n=this.coordinates[e[0]];n&&(n.splice(e[1],1),n.length<3&&this.coordinates.splice(e[0],1))},V.prototype.getCoordinate=function(t){var e=t.split(\".\").map((function(t){return parseInt(t,10)})),n=this.coordinates[e[0]];return JSON.parse(JSON.stringify(n[e[1]]))},V.prototype.getCoordinates=function(){return this.coordinates.map((function(t){return t.concat([t[0]])}))},V.prototype.updateCoordinate=function(t,e,n){this.changed();var o=t.split(\".\"),r=parseInt(o[0],10),i=parseInt(o[1],10);void 0===this.coordinates[r]&&(this.coordinates[r]=[]),this.coordinates[r][i]=[e,n]};var B={MultiPoint:U,MultiLineString:j,MultiPolygon:V},G=function(t,e,n,o,r){var i=n.split(\".\"),a=parseInt(i[0],10),s=i[1]?i.slice(1).join(\".\"):null;return t[a][e](s,o,r)},J=function(t,e){if(k.call(this,t,e),delete this.coordinates,this.model=B[e.geometry.type],void 0===this.model)throw new TypeError(e.geometry.type+\" is not a valid type\");this.features=this._coordinatesToFeatures(e.geometry.coordinates)};function z(t){this.map=t.map,this.drawConfig=JSON.parse(JSON.stringify(t.options||{})),this._ctx=t}(J.prototype=Object.create(k.prototype))._coordinatesToFeatures=function(t){var e=this,n=this.model.bind(this);return t.map((function(t){return new n(e.ctx,{id:D(),type:f.FEATURE,properties:{},geometry:{coordinates:t,type:e.type.replace(\"Multi\",\"\")}})}))},J.prototype.isValid=function(){return this.features.every((function(t){return t.isValid()}))},J.prototype.setCoordinates=function(t){this.features=this._coordinatesToFeatures(t),this.changed()},J.prototype.getCoordinate=function(t){return G(this.features,\"getCoordinate\",t)},J.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.features.map((function(t){return t.type===f.POLYGON?t.getCoordinates():t.coordinates}))))},J.prototype.updateCoordinate=function(t,e,n){G(this.features,\"updateCoordinate\",t,e,n),this.changed()},J.prototype.addCoordinate=function(t,e,n){G(this.features,\"addCoordinate\",t,e,n),this.changed()},J.prototype.removeCoordinate=function(t){G(this.features,\"removeCoordinate\",t),this.changed()},J.prototype.getFeatures=function(){return this.features},z.prototype.setSelected=function(t){return this._ctx.store.setSelected(t)},z.prototype.setSelectedCoordinates=function(t){var e=this;this._ctx.store.setSelectedCoordinates(t),t.reduce((function(t,n){return void 0===t[n.feature_id]&&(t[n.feature_id]=!0,e._ctx.store.get(n.feature_id).changed()),t}),{})},z.prototype.getSelected=function(){return this._ctx.store.getSelected()},z.prototype.getSelectedIds=function(){return this._ctx.store.getSelectedIds()},z.prototype.isSelected=function(t){return this._ctx.store.isSelected(t)},z.prototype.getFeature=function(t){return this._ctx.store.get(t)},z.prototype.select=function(t){return this._ctx.store.select(t)},z.prototype.deselect=function(t){return this._ctx.store.deselect(t)},z.prototype.deleteFeature=function(t,e){return void 0===e&&(e={}),this._ctx.store.delete(t,e)},z.prototype.addFeature=function(t){return this._ctx.store.add(t)},z.prototype.clearSelectedFeatures=function(){return this._ctx.store.clearSelected()},z.prototype.clearSelectedCoordinates=function(){return this._ctx.store.clearSelectedCoordinates()},z.prototype.setActionableState=function(t){void 0===t&&(t={});var e={trash:t.trash||!1,combineFeatures:t.combineFeatures||!1,uncombineFeatures:t.uncombineFeatures||!1};return this._ctx.events.actionable(e)},z.prototype.changeMode=function(t,e,n){return void 0===e&&(e={}),void 0===n&&(n={}),this._ctx.events.changeMode(t,e,n)},z.prototype.updateUIClasses=function(t){return this._ctx.ui.queueMapClasses(t)},z.prototype.activateUIButton=function(t){return this._ctx.ui.setActiveButton(t)},z.prototype.featuresAt=function(t,e,n){if(void 0===n&&(n=\"click\"),\"click\"!==n&&\"touch\"!==n)throw new Error(\"invalid buffer type\");return M[n](t,e,this._ctx)},z.prototype.newFeature=function(t){var e=t.geometry.type;return e===f.POINT?new U(this._ctx,t):e===f.LINE_STRING?new j(this._ctx,t):e===f.POLYGON?new V(this._ctx,t):new J(this._ctx,t)},z.prototype.isInstanceOf=function(t,e){if(t===f.POINT)return e instanceof U;if(t===f.LINE_STRING)return e instanceof j;if(t===f.POLYGON)return e instanceof V;if(\"MultiFeature\"===t)return e instanceof J;throw new Error(\"Unknown feature class: \"+t)},z.prototype.doRender=function(t){return this._ctx.store.featureChanged(t)},z.prototype.onSetup=function(){},z.prototype.onDrag=function(){},z.prototype.onClick=function(){},z.prototype.onMouseMove=function(){},z.prototype.onMouseDown=function(){},z.prototype.onMouseUp=function(){},z.prototype.onMouseOut=function(){},z.prototype.onKeyUp=function(){},z.prototype.onKeyDown=function(){},z.prototype.onTouchStart=function(){},z.prototype.onTouchMove=function(){},z.prototype.onTouchEnd=function(){},z.prototype.onTap=function(){},z.prototype.onStop=function(){},z.prototype.onTrash=function(){},z.prototype.onCombineFeature=function(){},z.prototype.onUncombineFeature=function(){},z.prototype.toDisplayFeatures=function(){throw new Error(\"You must overwrite toDisplayFeatures\")};var Y={drag:\"onDrag\",click:\"onClick\",mousemove:\"onMouseMove\",mousedown:\"onMouseDown\",mouseup:\"onMouseUp\",mouseout:\"onMouseOut\",keyup:\"onKeyUp\",keydown:\"onKeyDown\",touchstart:\"onTouchStart\",touchmove:\"onTouchMove\",touchend:\"onTouchEnd\",tap:\"onTap\"},$=Object.keys(Y);function q(t){var e=Object.keys(t);return function(n,o){void 0===o&&(o={});var r={},i=e.reduce((function(e,n){return e[n]=t[n],e}),new z(n));return{start:function(){var e=this;r=i.onSetup(o),$.forEach((function(n){var o,a=Y[n],s=function(){return!1};t[a]&&(s=function(){return!0}),e.on(n,s,(o=a,function(t){return i[o](r,t)}))}))},stop:function(){i.onStop(r)},trash:function(){i.onTrash(r)},combineFeatures:function(){i.onCombineFeatures(r)},uncombineFeatures:function(){i.onUncombineFeatures(r)},render:function(t,e){i.toDisplayFeatures(r,t,e)}}}}function H(t){return[].concat(t).filter((function(t){return void 0!==t}))}function X(){var t=this;if(!(t.ctx.map&&void 0!==t.ctx.map.getSource(l.HOT)))return u();var e=t.ctx.events.currentModeName();t.ctx.ui.queueMapClasses({mode:e});var n=[],o=[];t.isDirty?o=t.getAllIds():(n=t.getChangedIds().filter((function(e){return void 0!==t.get(e)})),o=t.sources.hot.filter((function(e){return e.properties.id&&-1===n.indexOf(e.properties.id)&&void 0!==t.get(e.properties.id)})).map((function(t){return t.properties.id}))),t.sources.hot=[];var r=t.sources.cold.length;t.sources.cold=t.isDirty?[]:t.sources.cold.filter((function(t){var e=t.properties.id||t.properties.parent;return-1===n.indexOf(e)}));var i=r!==t.sources.cold.length||o.length>0;function a(n,o){var r=t.get(n).internal(e);t.ctx.events.currentModeRender(r,(function(e){t.sources[o].push(e)}))}if(n.forEach((function(t){return a(t,\"hot\")})),o.forEach((function(t){return a(t,\"cold\")})),i&&t.ctx.map.getSource(l.COLD).setData({type:f.FEATURE_COLLECTION,features:t.sources.cold}),t.ctx.map.getSource(l.HOT).setData({type:f.FEATURE_COLLECTION,features:t.sources.hot}),t._emitSelectionChange&&(t.ctx.map.fire(g.SELECTION_CHANGE,{features:t.getSelected().map((function(t){return t.toGeoJSON()})),points:t.getSelectedCoordinates().map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t.coordinates}}}))}),t._emitSelectionChange=!1),t._deletedFeaturesToEmit.length){var s=t._deletedFeaturesToEmit.map((function(t){return t.toGeoJSON()}));t._deletedFeaturesToEmit=[],t.ctx.map.fire(g.DELETE,{features:s})}function u(){t.isDirty=!1,t.clearChangedIds()}u(),t.ctx.map.fire(g.RENDER,{})}function Z(t){var e,n=this;this._features={},this._featureIds=new I,this._selectedFeatureIds=new I,this._selectedCoordinates=[],this._changedFeatureIds=new I,this._deletedFeaturesToEmit=[],this._emitSelectionChange=!1,this._mapInitialConfig={},this.ctx=t,this.sources={hot:[],cold:[]},this.render=function(){e||(e=requestAnimationFrame((function(){e=null,X.call(n)})))},this.isDirty=!1}function W(t,e){var n=t._selectedCoordinates.filter((function(e){return t._selectedFeatureIds.has(e.feature_id)}));t._selectedCoordinates.length===n.length||e.silent||(t._emitSelectionChange=!0),t._selectedCoordinates=n}Z.prototype.createRenderBatch=function(){var t=this,e=this.render,n=0;return this.render=function(){n++},function(){t.render=e,n>0&&t.render()}},Z.prototype.setDirty=function(){return this.isDirty=!0,this},Z.prototype.featureChanged=function(t){return this._changedFeatureIds.add(t),this},Z.prototype.getChangedIds=function(){return this._changedFeatureIds.values()},Z.prototype.clearChangedIds=function(){return this._changedFeatureIds.clear(),this},Z.prototype.getAllIds=function(){return this._featureIds.values()},Z.prototype.add=function(t){return this.featureChanged(t.id),this._features[t.id]=t,this._featureIds.add(t.id),this},Z.prototype.delete=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._featureIds.has(t)&&(n._featureIds.delete(t),n._selectedFeatureIds.delete(t),e.silent||-1===n._deletedFeaturesToEmit.indexOf(n._features[t])&&n._deletedFeaturesToEmit.push(n._features[t]),delete n._features[t],n.isDirty=!0)})),W(this,e),this},Z.prototype.get=function(t){return this._features[t]},Z.prototype.getAll=function(){var t=this;return Object.keys(this._features).map((function(e){return t._features[e]}))},Z.prototype.select=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._selectedFeatureIds.has(t)||(n._selectedFeatureIds.add(t),n._changedFeatureIds.add(t),e.silent||(n._emitSelectionChange=!0))})),this},Z.prototype.deselect=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._selectedFeatureIds.has(t)&&(n._selectedFeatureIds.delete(t),n._changedFeatureIds.add(t),e.silent||(n._emitSelectionChange=!0))})),W(this,e),this},Z.prototype.clearSelected=function(t){return void 0===t&&(t={}),this.deselect(this._selectedFeatureIds.values(),{silent:t.silent}),this},Z.prototype.setSelected=function(t,e){var n=this;return void 0===e&&(e={}),t=H(t),this.deselect(this._selectedFeatureIds.values().filter((function(e){return-1===t.indexOf(e)})),{silent:e.silent}),this.select(t.filter((function(t){return!n._selectedFeatureIds.has(t)})),{silent:e.silent}),this},Z.prototype.setSelectedCoordinates=function(t){return this._selectedCoordinates=t,this._emitSelectionChange=!0,this},Z.prototype.clearSelectedCoordinates=function(){return this._selectedCoordinates=[],this._emitSelectionChange=!0,this},Z.prototype.getSelectedIds=function(){return this._selectedFeatureIds.values()},Z.prototype.getSelected=function(){var t=this;return this._selectedFeatureIds.values().map((function(e){return t.get(e)}))},Z.prototype.getSelectedCoordinates=function(){var t=this;return this._selectedCoordinates.map((function(e){return{coordinates:t.get(e.feature_id).getCoordinate(e.coord_path)}}))},Z.prototype.isSelected=function(t){return this._selectedFeatureIds.has(t)},Z.prototype.setFeatureProperty=function(t,e,n){this.get(t).setProperty(e,n),this.featureChanged(t)},Z.prototype.storeMapConfig=function(){var t=this;_.forEach((function(e){t.ctx.map[e]&&(t._mapInitialConfig[e]=t.ctx.map[e].isEnabled())}))},Z.prototype.restoreMapConfig=function(){var t=this;Object.keys(this._mapInitialConfig).forEach((function(e){t._mapInitialConfig[e]?t.ctx.map[e].enable():t.ctx.map[e].disable()}))},Z.prototype.getInitialConfigValue=function(t){return void 0===this._mapInitialConfig[t]||this._mapInitialConfig[t]};var K=function(){for(var t=arguments,e={},n=0;n<arguments.length;n++){var o=t[n];for(var r in o)Q.call(o,r)&&(e[r]=o[r])}return e},Q=Object.prototype.hasOwnProperty;var tt=e(K),et=[\"mode\",\"feature\",\"mouse\"];function nt(e){var n=null,o=null,r={onRemove:function(){return e.map.off(\"load\",r.connect),clearInterval(o),r.removeLayers(),e.store.restoreMapConfig(),e.ui.removeButtons(),e.events.removeEventListeners(),e.ui.clearMapClasses(),e.boxZoomInitial&&e.map.boxZoom.enable(),e.map=null,e.container=null,e.store=null,n&&n.parentNode&&n.parentNode.removeChild(n),n=null,this},connect:function(){e.map.off(\"load\",r.connect),clearInterval(o),r.addLayers(),e.store.storeMapConfig(),e.events.addEventListeners()},onAdd:function(i){var a=i.fire;return i.fire=function(t,e){var n=arguments;return 1===a.length&&1!==arguments.length&&(n=[tt({},{type:t},e)]),a.apply(i,n)},e.map=i,e.events=function(e){var n=Object.keys(e.options.modes).reduce((function(t,n){return t[n]=q(e.options.modes[n]),t}),{}),o={},r={},i={},a=null,s=null;i.drag=function(t,n){n({point:t.point,time:(new Date).getTime()})?(e.ui.queueMapClasses({mouse:d.DRAG}),s.drag(t)):t.originalEvent.stopPropagation()},i.mousedrag=function(t){i.drag(t,(function(t){return!P(o,t)}))},i.touchdrag=function(t){i.drag(t,(function(t){return!F(r,t)}))},i.mousemove=function(t){if(1===(void 0!==t.originalEvent.buttons?t.originalEvent.buttons:t.originalEvent.which))return i.mousedrag(t);var n=N(t,e);t.featureTarget=n,s.mousemove(t)},i.mousedown=function(t){o={time:(new Date).getTime(),point:t.point};var n=N(t,e);t.featureTarget=n,s.mousedown(t)},i.mouseup=function(t){var n=N(t,e);t.featureTarget=n,P(o,{point:t.point,time:(new Date).getTime()})?s.click(t):s.mouseup(t)},i.mouseout=function(t){s.mouseout(t)},i.touchstart=function(t){if(t.originalEvent.preventDefault(),e.options.touchEnabled){r={time:(new Date).getTime(),point:t.point};var n=M.touch(t,null,e)[0];t.featureTarget=n,s.touchstart(t)}},i.touchmove=function(t){if(t.originalEvent.preventDefault(),e.options.touchEnabled)return s.touchmove(t),i.touchdrag(t)},i.touchend=function(t){if(t.originalEvent.preventDefault(),e.options.touchEnabled){var n=M.touch(t,null,e)[0];t.featureTarget=n,F(r,{time:(new Date).getTime(),point:t.point})?s.tap(t):s.touchend(t)}};var u=function(t){return!(8===t||46===t||t>=48&&t<=57)};function c(o,r,i){void 0===i&&(i={}),s.stop();var u=n[o];if(void 0===u)throw new Error(o+\" is not valid\");a=o;var c=u(e,r);s=t(c,e),i.silent||e.map.fire(g.MODE_CHANGE,{mode:o}),e.store.setDirty(),e.store.render()}i.keydown=function(t){(t.srcElement||t.target).classList.contains(\"mapboxgl-canvas\")&&(8!==t.keyCode&&46!==t.keyCode||!e.options.controls.trash?u(t.keyCode)?s.keydown(t):49===t.keyCode&&e.options.controls.point?c(h.DRAW_POINT):50===t.keyCode&&e.options.controls.line_string?c(h.DRAW_LINE_STRING):51===t.keyCode&&e.options.controls.polygon&&c(h.DRAW_POLYGON):(t.preventDefault(),s.trash()))},i.keyup=function(t){u(t.keyCode)&&s.keyup(t)},i.zoomend=function(){e.store.changeZoom()},i.data=function(t){if(\"style\"===t.dataType){var n=e.setup,o=e.map,r=e.options,i=e.store;r.styles.some((function(t){return o.getLayer(t.id)}))||(n.addLayers(),i.setDirty(),i.render())}};var l={trash:!1,combineFeatures:!1,uncombineFeatures:!1};return{start:function(){a=e.options.defaultMode,s=t(n[a](e),e)},changeMode:c,actionable:function(t){var n=!1;Object.keys(t).forEach((function(e){if(void 0===l[e])throw new Error(\"Invalid action type\");l[e]!==t[e]&&(n=!0),l[e]=t[e]})),n&&e.map.fire(g.ACTIONABLE,{actions:l})},currentModeName:function(){return a},currentModeRender:function(t,e){return s.render(t,e)},fire:function(t,e){i[t]&&i[t](e)},addEventListeners:function(){e.map.on(\"mousemove\",i.mousemove),e.map.on(\"mousedown\",i.mousedown),e.map.on(\"mouseup\",i.mouseup),e.map.on(\"data\",i.data),e.map.on(\"touchmove\",i.touchmove),e.map.on(\"touchstart\",i.touchstart),e.map.on(\"touchend\",i.touchend),e.container.addEventListener(\"mouseout\",i.mouseout),e.options.keybindings&&(e.container.addEventListener(\"keydown\",i.keydown),e.container.addEventListener(\"keyup\",i.keyup))},removeEventListeners:function(){e.map.off(\"mousemove\",i.mousemove),e.map.off(\"mousedown\",i.mousedown),e.map.off(\"mouseup\",i.mouseup),e.map.off(\"data\",i.data),e.map.off(\"touchmove\",i.touchmove),e.map.off(\"touchstart\",i.touchstart),e.map.off(\"touchend\",i.touchend),e.container.removeEventListener(\"mouseout\",i.mouseout),e.options.keybindings&&(e.container.removeEventListener(\"keydown\",i.keydown),e.container.removeEventListener(\"keyup\",i.keyup))},trash:function(t){s.trash(t)},combineFeatures:function(){s.combineFeatures()},uncombineFeatures:function(){s.uncombineFeatures()},getMode:function(){return a}}}(e),e.ui=function(t){var e={},n=null,o={mode:null,feature:null,mouse:null},r={mode:null,feature:null,mouse:null};function i(t){r=tt(r,t)}function a(){var e,n;if(t.container){var i=[],a=[];et.forEach((function(t){r[t]!==o[t]&&(i.push(t+\"-\"+o[t]),null!==r[t]&&a.push(t+\"-\"+r[t]))})),i.length>0&&(e=t.container.classList).remove.apply(e,i),a.length>0&&(n=t.container.classList).add.apply(n,a),o=tt(o,r)}}function s(t,e){void 0===e&&(e={});var o=document.createElement(\"button\");return o.className=c.CONTROL_BUTTON+\" \"+e.className,o.setAttribute(\"title\",e.title),e.container.appendChild(o),o.addEventListener(\"click\",(function(o){if(o.preventDefault(),o.stopPropagation(),o.target===n)return u(),void e.onDeactivate();l(t),e.onActivate()}),!0),o}function u(){n&&(n.classList.remove(c.ACTIVE_BUTTON),n=null)}function l(t){u();var o=e[t];o&&o&&\"trash\"!==t&&(o.classList.add(c.ACTIVE_BUTTON),n=o)}return{setActiveButton:l,queueMapClasses:i,updateMapClasses:a,clearMapClasses:function(){i({mode:null,feature:null,mouse:null}),a()},addButtons:function(){var n=t.options.controls,o=document.createElement(\"div\");return o.className=c.CONTROL_GROUP+\" \"+c.CONTROL_BASE,n?(n[p.LINE]&&(e[p.LINE]=s(p.LINE,{container:o,className:c.CONTROL_BUTTON_LINE,title:\"LineString tool \"+(t.options.keybindings?\"(l)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_LINE_STRING)},onDeactivate:function(){return t.events.trash()}})),n[p.POLYGON]&&(e[p.POLYGON]=s(p.POLYGON,{container:o,className:c.CONTROL_BUTTON_POLYGON,title:\"Polygon tool \"+(t.options.keybindings?\"(p)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_POLYGON)},onDeactivate:function(){return t.events.trash()}})),n[p.POINT]&&(e[p.POINT]=s(p.POINT,{container:o,className:c.CONTROL_BUTTON_POINT,title:\"Marker tool \"+(t.options.keybindings?\"(m)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_POINT)},onDeactivate:function(){return t.events.trash()}})),n.trash&&(e.trash=s(\"trash\",{container:o,className:c.CONTROL_BUTTON_TRASH,title:\"Delete\",onActivate:function(){t.events.trash()}})),n.combine_features&&(e.combine_features=s(\"combineFeatures\",{container:o,className:c.CONTROL_BUTTON_COMBINE_FEATURES,title:\"Combine\",onActivate:function(){t.events.combineFeatures()}})),n.uncombine_features&&(e.uncombine_features=s(\"uncombineFeatures\",{container:o,className:c.CONTROL_BUTTON_UNCOMBINE_FEATURES,title:\"Uncombine\",onActivate:function(){t.events.uncombineFeatures()}})),o):o},removeButtons:function(){Object.keys(e).forEach((function(t){var n=e[t];n.parentNode&&n.parentNode.removeChild(n),delete e[t]}))}}}(e),e.container=i.getContainer(),e.store=new Z(e),n=e.ui.addButtons(),e.options.boxSelect&&(e.boxZoomInitial=i.boxZoom.isEnabled(),i.boxZoom.disable(),i.dragPan.disable(),i.dragPan.enable()),i.loaded()?r.connect():(i.on(\"load\",r.connect),o=setInterval((function(){i.loaded()&&r.connect()}),16)),e.events.start(),n},addLayers:function(){e.map.addSource(l.COLD,{data:{type:f.FEATURE_COLLECTION,features:[]},type:\"geojson\"}),e.map.addSource(l.HOT,{data:{type:f.FEATURE_COLLECTION,features:[]},type:\"geojson\"}),e.options.styles.forEach((function(t){e.map.addLayer(t)})),e.store.setDirty(!0),e.store.render()},removeLayers:function(){e.options.styles.forEach((function(t){e.map.getLayer(t.id)&&e.map.removeLayer(t.id)})),e.map.getSource(l.COLD)&&e.map.removeSource(l.COLD),e.map.getSource(l.HOT)&&e.map.removeSource(l.HOT)}};return e.setup=r,r}var ot=[{id:\"gl-draw-polygon-fill-inactive\",type:\"fill\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Polygon\"],[\"!=\",\"mode\",\"static\"]],paint:{\"fill-color\":\"#3bb2d0\",\"fill-outline-color\":\"#3bb2d0\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-fill-active\",type:\"fill\",filter:[\"all\",[\"==\",\"active\",\"true\"],[\"==\",\"$type\",\"Polygon\"]],paint:{\"fill-color\":\"#fbb03b\",\"fill-outline-color\":\"#fbb03b\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-midpoint\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"midpoint\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-polygon-stroke-inactive\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Polygon\"],[\"!=\",\"mode\",\"static\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#3bb2d0\",\"line-width\":2}},{id:\"gl-draw-polygon-stroke-active\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"true\"],[\"==\",\"$type\",\"Polygon\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#fbb03b\",\"line-dasharray\":[.2,2],\"line-width\":2}},{id:\"gl-draw-line-inactive\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"LineString\"],[\"!=\",\"mode\",\"static\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#3bb2d0\",\"line-width\":2}},{id:\"gl-draw-line-active\",type:\"line\",filter:[\"all\",[\"==\",\"$type\",\"LineString\"],[\"==\",\"active\",\"true\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#fbb03b\",\"line-dasharray\":[.2,2],\"line-width\":2}},{id:\"gl-draw-polygon-and-line-vertex-stroke-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"meta\",\"vertex\"],[\"==\",\"$type\",\"Point\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#fff\"}},{id:\"gl-draw-polygon-and-line-vertex-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"meta\",\"vertex\"],[\"==\",\"$type\",\"Point\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-point-point-stroke-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"feature\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":5,\"circle-opacity\":1,\"circle-color\":\"#fff\"}},{id:\"gl-draw-point-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"feature\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#3bb2d0\"}},{id:\"gl-draw-point-stroke-active\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"==\",\"active\",\"true\"],[\"!=\",\"meta\",\"midpoint\"]],paint:{\"circle-radius\":7,\"circle-color\":\"#fff\"}},{id:\"gl-draw-point-active\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"!=\",\"meta\",\"midpoint\"],[\"==\",\"active\",\"true\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-polygon-fill-static\",type:\"fill\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Polygon\"]],paint:{\"fill-color\":\"#404040\",\"fill-outline-color\":\"#404040\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-stroke-static\",type:\"line\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Polygon\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#404040\",\"line-width\":2}},{id:\"gl-draw-line-static\",type:\"line\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"LineString\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#404040\",\"line-width\":2}},{id:\"gl-draw-point-static\",type:\"circle\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Point\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#404040\"}}];function rt(t){return function(e){var n=e.featureTarget;return!!n&&(!!n.properties&&n.properties.meta===t)}}function it(t){return!!t.originalEvent&&(!!t.originalEvent.shiftKey&&0===t.originalEvent.button)}function at(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===m.ACTIVE&&t.featureTarget.properties.meta===v.FEATURE))}function st(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===m.INACTIVE&&t.featureTarget.properties.meta===v.FEATURE))}function ut(t){return void 0===t.featureTarget}function ct(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&t.featureTarget.properties.meta===v.FEATURE)}function lt(t){var e=t.featureTarget;return!!e&&(!!e.properties&&e.properties.meta===v.VERTEX)}function dt(t){return!!t.originalEvent&&!0===t.originalEvent.shiftKey}function pt(t){return 27===t.keyCode}function ft(t){return 13===t.keyCode}var ht=Object.freeze({__proto__:null,isOfMetaType:rt,isShiftMousedown:it,isActiveFeature:at,isInactiveFeature:st,noTarget:ut,isFeature:ct,isVertex:lt,isShiftDown:dt,isEscapeKey:pt,isEnterKey:ft,isTrue:function(){return!0}}),gt=yt;function yt(t,e){this.x=t,this.y=e}yt.prototype={clone:function(){return new yt(this.x,this.y)},add:function(t){return this.clone()._add(t)},sub:function(t){return this.clone()._sub(t)},multByPoint:function(t){return this.clone()._multByPoint(t)},divByPoint:function(t){return this.clone()._divByPoint(t)},mult:function(t){return this.clone()._mult(t)},div:function(t){return this.clone()._div(t)},rotate:function(t){return this.clone()._rotate(t)},rotateAround:function(t,e){return this.clone()._rotateAround(t,e)},matMult:function(t){return this.clone()._matMult(t)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(t){return this.x===t.x&&this.y===t.y},dist:function(t){return Math.sqrt(this.distSqr(t))},distSqr:function(t){var e=t.x-this.x,n=t.y-this.y;return e*e+n*n},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(t){return Math.atan2(this.y-t.y,this.x-t.x)},angleWith:function(t){return this.angleWithSep(t.x,t.y)},angleWithSep:function(t,e){return Math.atan2(this.x*e-this.y*t,this.x*t+this.y*e)},_matMult:function(t){var e=t[0]*this.x+t[1]*this.y,n=t[2]*this.x+t[3]*this.y;return this.x=e,this.y=n,this},_add:function(t){return this.x+=t.x,this.y+=t.y,this},_sub:function(t){return this.x-=t.x,this.y-=t.y,this},_mult:function(t){return this.x*=t,this.y*=t,this},_div:function(t){return this.x/=t,this.y/=t,this},_multByPoint:function(t){return this.x*=t.x,this.y*=t.y,this},_divByPoint:function(t){return this.x/=t.x,this.y/=t.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){var t=this.y;return this.y=this.x,this.x=-t,this},_rotate:function(t){var e=Math.cos(t),n=Math.sin(t),o=e*this.x-n*this.y,r=n*this.x+e*this.y;return this.x=o,this.y=r,this},_rotateAround:function(t,e){var n=Math.cos(t),o=Math.sin(t),r=e.x+n*(this.x-e.x)-o*(this.y-e.y),i=e.y+o*(this.x-e.x)+n*(this.y-e.y);return this.x=r,this.y=i,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},yt.convert=function(t){return t instanceof yt?t:Array.isArray(t)?new yt(t[0],t[1]):t};var vt=e(gt);function mt(t,e){var n=e.getBoundingClientRect();return new vt(t.clientX-n.left-(e.clientLeft||0),t.clientY-n.top-(e.clientTop||0))}function _t(t,e,n,o){return{type:f.FEATURE,properties:{meta:v.VERTEX,parent:t,coord_path:n,active:o?m.ACTIVE:m.INACTIVE},geometry:{type:f.POINT,coordinates:e}}}function bt(t,e,n){var o=e.geometry.coordinates,r=n.geometry.coordinates;if(o[1]>85||o[1]<b||r[1]>85||r[1]<b)return null;var i={lng:(o[0]+r[0])/2,lat:(o[1]+r[1])/2};return{type:f.FEATURE,properties:{meta:v.MIDPOINT,parent:t,lng:i.lng,lat:i.lat,coord_path:n.properties.coord_path},geometry:{type:f.POINT,coordinates:[i.lng,i.lat]}}}function Et(t,e,n){void 0===e&&(e={}),void 0===n&&(n=null);var o,r=t.geometry,i=r.type,a=r.coordinates,s=t.properties&&t.properties.id,u=[];function c(t,n){var o=\"\",r=null;t.forEach((function(t,i){var a=null!=n?n+\".\"+i:String(i),c=_t(s,t,a,l(a));if(e.midpoints&&r){var d=bt(s,r,c);d&&u.push(d)}r=c;var p=JSON.stringify(t);o!==p&&u.push(c),0===i&&(o=p)}))}function l(t){return!!e.selectedPaths&&-1!==e.selectedPaths.indexOf(t)}return i===f.POINT?u.push(_t(s,a,n,l(n))):i===f.POLYGON?a.forEach((function(t,e){c(t,null!==n?n+\".\"+e:String(e))})):i===f.LINE_STRING?c(a,n):0===i.indexOf(f.MULTI_PREFIX)&&(o=i.replace(f.MULTI_PREFIX,\"\"),a.forEach((function(n,r){var i={type:f.FEATURE,properties:t.properties,geometry:{type:o,coordinates:n}};u=u.concat(Et(i,e,r))}))),u}var Tt={enable:function(t){setTimeout((function(){t.map&&t.map.doubleClickZoom&&t._ctx&&t._ctx.store&&t._ctx.store.getInitialConfigValue&&t._ctx.store.getInitialConfigValue(\"doubleClickZoom\")&&t.map.doubleClickZoom.enable()}),0)},disable:function(t){setTimeout((function(){t.map&&t.map.doubleClickZoom&&t.map.doubleClickZoom.disable()}),0)}},Ct={exports:{}},Ot=function(t){if(!t||!t.type)return null;var e=St[t.type];if(!e)return null;if(\"geometry\"===e)return{type:\"FeatureCollection\",features:[{type:\"Feature\",properties:{},geometry:t}]};if(\"feature\"===e)return{type:\"FeatureCollection\",features:[t]};if(\"featurecollection\"===e)return t},St={Point:\"geometry\",MultiPoint:\"geometry\",LineString:\"geometry\",MultiLineString:\"geometry\",Polygon:\"geometry\",MultiPolygon:\"geometry\",GeometryCollection:\"geometry\",Feature:\"feature\",FeatureCollection:\"featurecollection\"};var It=e(Ot);var xt=Object.freeze({__proto__:null,default:function t(e){switch(e&&e.type||null){case\"FeatureCollection\":return e.features=e.features.reduce((function(e,n){return e.concat(t(n))}),[]),e;case\"Feature\":return e.geometry?t(e.geometry).map((function(t){var n={type:\"Feature\",properties:JSON.parse(JSON.stringify(e.properties)),geometry:t};return void 0!==e.id&&(n.id=e.id),n})):[e];case\"MultiPoint\":return e.coordinates.map((function(t){return{type:\"Point\",coordinates:t}}));case\"MultiPolygon\":return e.coordinates.map((function(t){return{type:\"Polygon\",coordinates:t}}));case\"MultiLineString\":return e.coordinates.map((function(t){return{type:\"LineString\",coordinates:t}}));case\"GeometryCollection\":return e.geometries.map(t).reduce((function(t,e){return t.concat(e)}),[]);case\"Point\":case\"Polygon\":case\"LineString\":return[e]}}}),Mt=Ot,Lt=n(xt),Nt=function(t){return function t(e){if(Array.isArray(e)&&e.length&&\"number\"==typeof e[0])return[e];return e.reduce((function(e,n){return Array.isArray(n)&&Array.isArray(n[0])?e.concat(t(n)):(e.push(n),e)}),[])}(t)};Lt instanceof Function||(Lt=Lt.default);var At={exports:{}},Pt=At.exports=function(t){return new Ft(t)};function Ft(t){this.value=t}function wt(t,e,n){var o=[],r=[],i=!0;return function t(a){var s=n?Rt(a):a,u={},c=!0,l={node:s,node_:a,path:[].concat(o),parent:r[r.length-1],parents:r,key:o.slice(-1)[0],isRoot:0===o.length,level:o.length,circular:null,update:function(t,e){l.isRoot||(l.parent.node[l.key]=t),l.node=t,e&&(c=!1)},delete:function(t){delete l.parent.node[l.key],t&&(c=!1)},remove:function(t){Ut(l.parent.node)?l.parent.node.splice(l.key,1):delete l.parent.node[l.key],t&&(c=!1)},keys:null,before:function(t){u.before=t},after:function(t){u.after=t},pre:function(t){u.pre=t},post:function(t){u.post=t},stop:function(){i=!1},block:function(){c=!1}};if(!i)return l;function d(){if(\"object\"==typeof l.node&&null!==l.node){l.keys&&l.node_===l.node||(l.keys=Dt(l.node)),l.isLeaf=0==l.keys.length;for(var t=0;t<r.length;t++)if(r[t].node_===a){l.circular=r[t];break}}else l.isLeaf=!0,l.keys=null;l.notLeaf=!l.isLeaf,l.notRoot=!l.isRoot}d();var p=e.call(l,l.node);return void 0!==p&&l.update&&l.update(p),u.before&&u.before.call(l,l.node),c?(\"object\"!=typeof l.node||null===l.node||l.circular||(r.push(l),d(),jt(l.keys,(function(e,r){o.push(e),u.pre&&u.pre.call(l,l.node[e],e);var i=t(l.node[e]);n&&Vt.call(l.node,e)&&(l.node[e]=i.node),i.isLast=r==l.keys.length-1,i.isFirst=0==r,u.post&&u.post.call(l,i),o.pop()})),r.pop()),u.after&&u.after.call(l,l.node),l):l}(t).node}function Rt(t){if(\"object\"==typeof t&&null!==t){var e;if(Ut(t))e=[];else if(\"[object Date]\"===kt(t))e=new Date(t.getTime?t.getTime():t);else if(function(t){return\"[object RegExp]\"===kt(t)}(t))e=new RegExp(t);else if(function(t){return\"[object Error]\"===kt(t)}(t))e={message:t.message};else if(function(t){return\"[object Boolean]\"===kt(t)}(t))e=new Boolean(t);else if(function(t){return\"[object Number]\"===kt(t)}(t))e=new Number(t);else if(function(t){return\"[object String]\"===kt(t)}(t))e=new String(t);else if(Object.create&&Object.getPrototypeOf)e=Object.create(Object.getPrototypeOf(t));else if(t.constructor===Object)e={};else{var n=t.constructor&&t.constructor.prototype||t.__proto__||{},o=function(){};o.prototype=n,e=new o}return jt(Dt(t),(function(n){e[n]=t[n]})),e}return t}Ft.prototype.get=function(t){for(var e=this.value,n=0;n<t.length;n++){var o=t[n];if(!e||!Vt.call(e,o)){e=void 0;break}e=e[o]}return e},Ft.prototype.has=function(t){for(var e=this.value,n=0;n<t.length;n++){var o=t[n];if(!e||!Vt.call(e,o))return!1;e=e[o]}return!0},Ft.prototype.set=function(t,e){for(var n=this.value,o=0;o<t.length-1;o++){var r=t[o];Vt.call(n,r)||(n[r]={}),n=n[r]}return n[t[o]]=e,e},Ft.prototype.map=function(t){return wt(this.value,t,!0)},Ft.prototype.forEach=function(t){return this.value=wt(this.value,t,!1),this.value},Ft.prototype.reduce=function(t,e){var n=1===arguments.length,o=n?this.value:e;return this.forEach((function(e){this.isRoot&&n||(o=t.call(this,o,e))})),o},Ft.prototype.paths=function(){var t=[];return this.forEach((function(e){t.push(this.path)})),t},Ft.prototype.nodes=function(){var t=[];return this.forEach((function(e){t.push(this.node)})),t},Ft.prototype.clone=function(){var t=[],e=[];return function n(o){for(var r=0;r<t.length;r++)if(t[r]===o)return e[r];if(\"object\"==typeof o&&null!==o){var i=Rt(o);return t.push(o),e.push(i),jt(Dt(o),(function(t){i[t]=n(o[t])})),t.pop(),e.pop(),i}return o}(this.value)};var Dt=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};function kt(t){return Object.prototype.toString.call(t)}var Ut=Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)},jt=function(t,e){if(t.forEach)return t.forEach(e);for(var n=0;n<t.length;n++)e(t[n],n,t)};jt(Dt(Ft.prototype),(function(t){Pt[t]=function(e){var n=[].slice.call(arguments,1),o=new Ft(e);return o[t].apply(o,n)}}));var Vt=Object.hasOwnProperty||function(t,e){return e in t},Bt=At.exports,Gt=Jt;function Jt(t){if(!(this instanceof Jt))return new Jt(t);this._bbox=t||[1/0,1/0,-1/0,-1/0],this._valid=!!t}Jt.prototype.include=function(t){return this._valid=!0,this._bbox[0]=Math.min(this._bbox[0],t[0]),this._bbox[1]=Math.min(this._bbox[1],t[1]),this._bbox[2]=Math.max(this._bbox[2],t[0]),this._bbox[3]=Math.max(this._bbox[3],t[1]),this},Jt.prototype.equals=function(t){var e;return e=t instanceof Jt?t.bbox():t,this._bbox[0]==e[0]&&this._bbox[1]==e[1]&&this._bbox[2]==e[2]&&this._bbox[3]==e[3]},Jt.prototype.center=function(t){return this._valid?[(this._bbox[0]+this._bbox[2])/2,(this._bbox[1]+this._bbox[3])/2]:null},Jt.prototype.union=function(t){var e;return this._valid=!0,e=t instanceof Jt?t.bbox():t,this._bbox[0]=Math.min(this._bbox[0],e[0]),this._bbox[1]=Math.min(this._bbox[1],e[1]),this._bbox[2]=Math.max(this._bbox[2],e[2]),this._bbox[3]=Math.max(this._bbox[3],e[3]),this},Jt.prototype.bbox=function(){return this._valid?this._bbox:null},Jt.prototype.contains=function(t){if(!t)return this._fastContains();if(!this._valid)return null;var e=t[0],n=t[1];return this._bbox[0]<=e&&this._bbox[1]<=n&&this._bbox[2]>=e&&this._bbox[3]>=n},Jt.prototype.intersect=function(t){return this._valid?(e=t instanceof Jt?t.bbox():t,!(this._bbox[0]>e[2]||this._bbox[2]<e[0]||this._bbox[3]<e[1]||this._bbox[1]>e[3])):null;var e},Jt.prototype._fastContains=function(){if(!this._valid)return new Function(\"return null;\");var t=\"return \"+this._bbox[0]+\"<= ll[0] &&\"+this._bbox[1]+\"<= ll[1] &&\"+this._bbox[2]+\">= ll[0] &&\"+this._bbox[3]+\">= ll[1]\";return new Function(\"ll\",t)},Jt.prototype.polygon=function(){return this._valid?{type:\"Polygon\",coordinates:[[[this._bbox[0],this._bbox[1]],[this._bbox[2],this._bbox[1]],[this._bbox[2],this._bbox[3]],[this._bbox[0],this._bbox[3]],[this._bbox[0],this._bbox[1]]]]}:null};var zt=function(t){if(!t)return[];var e=Lt(Mt(t)),n=[];return e.features.forEach((function(t){t.geometry&&(n=n.concat(Nt(t.geometry.coordinates)))})),n},Yt=Bt,$t=Gt,qt={features:[\"FeatureCollection\"],coordinates:[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],geometry:[\"Feature\"],geometries:[\"GeometryCollection\"]},Ht=Object.keys(qt);function Xt(t){for(var e=$t(),n=zt(t),o=0;o<n.length;o++)e.include(n[o]);return e}Ct.exports=function(t){return Xt(t).bbox()},Ct.exports.polygon=function(t){return Xt(t).polygon()},Ct.exports.bboxify=function(t){return Yt(t).map((function(t){t&&(Ht.some((function(e){return!!t[e]&&-1!==qt[e].indexOf(t.type)}))&&(t.bbox=Xt(t).bbox(),this.update(t)))}))};var Zt=e(Ct.exports),Wt=-90;function Kt(t,e){var n=Wt,o=90,r=Wt,i=90,a=270,s=-270;t.forEach((function(t){var e=Zt(t),u=e[1],c=e[3],l=e[0],d=e[2];u>n&&(n=u),c<o&&(o=c),c>r&&(r=c),u<i&&(i=u),l<a&&(a=l),d>s&&(s=d)}));var u=e;return n+u.lat>85&&(u.lat=85-n),r+u.lat>90&&(u.lat=90-r),o+u.lat<-85&&(u.lat=-85-o),i+u.lat<Wt&&(u.lat=Wt-i),a+u.lng<=-270&&(u.lng+=360*Math.ceil(Math.abs(u.lng)/360)),s+u.lng>=270&&(u.lng-=360*Math.ceil(Math.abs(u.lng)/360)),u}function Qt(t,e){var n=Kt(t.map((function(t){return t.toGeoJSON()})),e);t.forEach((function(t){var e,o=t.getCoordinates(),r=function(t){var e={lng:t[0]+n.lng,lat:t[1]+n.lat};return[e.lng,e.lat]},i=function(t){return t.map((function(t){return r(t)}))};t.type===f.POINT?e=r(o):t.type===f.LINE_STRING||t.type===f.MULTI_POINT?e=o.map(r):t.type===f.POLYGON||t.type===f.MULTI_LINE_STRING?e=o.map(i):t.type===f.MULTI_POLYGON&&(e=o.map((function(t){return t.map((function(t){return i(t)}))}))),t.incomingCoords(e)}))}var te={onSetup:function(t){var e=this,n={dragMoveLocation:null,boxSelectStartLocation:null,boxSelectElement:void 0,boxSelecting:!1,canBoxSelect:!1,dragMoving:!1,canDragMove:!1,initiallySelectedFeatureIds:t.featureIds||[]};return this.setSelected(n.initiallySelectedFeatureIds.filter((function(t){return void 0!==e.getFeature(t)}))),this.fireActionable(),this.setActionableState({combineFeatures:!0,uncombineFeatures:!0,trash:!0}),n},fireUpdate:function(){this.map.fire(g.UPDATE,{action:y.MOVE,features:this.getSelected().map((function(t){return t.toGeoJSON()}))})},fireActionable:function(){var t=this,e=this.getSelected(),n=e.filter((function(e){return t.isInstanceOf(\"MultiFeature\",e)})),o=!1;if(e.length>1){o=!0;var r=e[0].type.replace(\"Multi\",\"\");e.forEach((function(t){t.type.replace(\"Multi\",\"\")!==r&&(o=!1)}))}var i=n.length>0,a=e.length>0;this.setActionableState({combineFeatures:o,uncombineFeatures:i,trash:a})},getUniqueIds:function(t){return t.length?t.map((function(t){return t.properties.id})).filter((function(t){return void 0!==t})).reduce((function(t,e){return t.add(e),t}),new I).values():[]},stopExtendedInteractions:function(t){t.boxSelectElement&&(t.boxSelectElement.parentNode&&t.boxSelectElement.parentNode.removeChild(t.boxSelectElement),t.boxSelectElement=null),this.map.dragPan.enable(),t.boxSelecting=!1,t.canBoxSelect=!1,t.dragMoving=!1,t.canDragMove=!1},onStop:function(){Tt.enable(this)},onMouseMove:function(t,e){return ct(e)&&t.dragMoving&&this.fireUpdate(),this.stopExtendedInteractions(t),!0},onMouseOut:function(t){return!t.dragMoving||this.fireUpdate()}};te.onTap=te.onClick=function(t,e){return ut(e)?this.clickAnywhere(t,e):rt(v.VERTEX)(e)?this.clickOnVertex(t,e):ct(e)?this.clickOnFeature(t,e):void 0},te.clickAnywhere=function(t){var e=this,n=this.getSelectedIds();n.length&&(this.clearSelectedFeatures(),n.forEach((function(t){return e.doRender(t)}))),Tt.enable(this),this.stopExtendedInteractions(t)},te.clickOnVertex=function(t,e){this.changeMode(h.DIRECT_SELECT,{featureId:e.featureTarget.properties.parent,coordPath:e.featureTarget.properties.coord_path,startPos:e.lngLat}),this.updateUIClasses({mouse:d.MOVE})},te.startOnActiveFeature=function(t,e){this.stopExtendedInteractions(t),this.map.dragPan.disable(),this.doRender(e.featureTarget.properties.id),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},te.clickOnFeature=function(t,e){var n=this;Tt.disable(this),this.stopExtendedInteractions(t);var o=dt(e),r=this.getSelectedIds(),i=e.featureTarget.properties.id,a=this.isSelected(i);if(!o&&a&&this.getFeature(i).type!==f.POINT)return this.changeMode(h.DIRECT_SELECT,{featureId:i});a&&o?(this.deselect(i),this.updateUIClasses({mouse:d.POINTER}),1===r.length&&Tt.enable(this)):!a&&o?(this.select(i),this.updateUIClasses({mouse:d.MOVE})):a||o||(r.forEach((function(t){return n.doRender(t)})),this.setSelected(i),this.updateUIClasses({mouse:d.MOVE})),this.doRender(i)},te.onMouseDown=function(t,e){return at(e)?this.startOnActiveFeature(t,e):this.drawConfig.boxSelect&&it(e)?this.startBoxSelect(t,e):void 0},te.startBoxSelect=function(t,e){this.stopExtendedInteractions(t),this.map.dragPan.disable(),t.boxSelectStartLocation=mt(e.originalEvent,this.map.getContainer()),t.canBoxSelect=!0},te.onTouchStart=function(t,e){if(at(e))return this.startOnActiveFeature(t,e)},te.onDrag=function(t,e){return t.canDragMove?this.dragMove(t,e):this.drawConfig.boxSelect&&t.canBoxSelect?this.whileBoxSelect(t,e):void 0},te.whileBoxSelect=function(t,e){t.boxSelecting=!0,this.updateUIClasses({mouse:d.ADD}),t.boxSelectElement||(t.boxSelectElement=document.createElement(\"div\"),t.boxSelectElement.classList.add(c.BOX_SELECT),this.map.getContainer().appendChild(t.boxSelectElement));var n=mt(e.originalEvent,this.map.getContainer()),o=Math.min(t.boxSelectStartLocation.x,n.x),r=Math.max(t.boxSelectStartLocation.x,n.x),i=Math.min(t.boxSelectStartLocation.y,n.y),a=Math.max(t.boxSelectStartLocation.y,n.y),s=\"translate(\"+o+\"px, \"+i+\"px)\";t.boxSelectElement.style.transform=s,t.boxSelectElement.style.WebkitTransform=s,t.boxSelectElement.style.width=r-o+\"px\",t.boxSelectElement.style.height=a-i+\"px\"},te.dragMove=function(t,e){t.dragMoving=!0,e.originalEvent.stopPropagation();var n={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};Qt(this.getSelected(),n),t.dragMoveLocation=e.lngLat},te.onTouchEnd=te.onMouseUp=function(t,e){var n=this;if(t.dragMoving)this.fireUpdate();else if(t.boxSelecting){var o=[t.boxSelectStartLocation,mt(e.originalEvent,this.map.getContainer())],r=this.featuresAt(null,o,\"click\"),i=this.getUniqueIds(r).filter((function(t){return!n.isSelected(t)}));i.length&&(this.select(i),i.forEach((function(t){return n.doRender(t)})),this.updateUIClasses({mouse:d.MOVE}))}this.stopExtendedInteractions(t)},te.toDisplayFeatures=function(t,e,n){e.properties.active=this.isSelected(e.properties.id)?m.ACTIVE:m.INACTIVE,n(e),this.fireActionable(),e.properties.active===m.ACTIVE&&e.geometry.type!==f.POINT&&Et(e).forEach(n)},te.onTrash=function(){this.deleteFeature(this.getSelectedIds()),this.fireActionable()},te.onCombineFeatures=function(){var t=this.getSelected();if(!(0===t.length||t.length<2)){for(var e=[],n=[],o=t[0].type.replace(\"Multi\",\"\"),r=0;r<t.length;r++){var i=t[r];if(i.type.replace(\"Multi\",\"\")!==o)return;i.type.includes(\"Multi\")?i.getCoordinates().forEach((function(t){e.push(t)})):e.push(i.getCoordinates()),n.push(i.toGeoJSON())}if(n.length>1){var a=this.newFeature({type:f.FEATURE,properties:n[0].properties,geometry:{type:\"Multi\"+o,coordinates:e}});this.addFeature(a),this.deleteFeature(this.getSelectedIds(),{silent:!0}),this.setSelected([a.id]),this.map.fire(g.COMBINE_FEATURES,{createdFeatures:[a.toGeoJSON()],deletedFeatures:n})}this.fireActionable()}},te.onUncombineFeatures=function(){var t=this,e=this.getSelected();if(0!==e.length){for(var n=[],o=[],r=function(r){var i=e[r];t.isInstanceOf(\"MultiFeature\",i)&&(i.getFeatures().forEach((function(e){t.addFeature(e),e.properties=i.properties,n.push(e.toGeoJSON()),t.select([e.id])})),t.deleteFeature(i.id,{silent:!0}),o.push(i.toGeoJSON()))},i=0;i<e.length;i++)r(i);n.length>1&&this.map.fire(g.UNCOMBINE_FEATURES,{createdFeatures:n,deletedFeatures:o}),this.fireActionable()}};var ee=rt(v.VERTEX),ne=rt(v.MIDPOINT),oe={fireUpdate:function(){this.map.fire(g.UPDATE,{action:y.CHANGE_COORDINATES,features:this.getSelected().map((function(t){return t.toGeoJSON()}))})},fireActionable:function(t){this.setActionableState({combineFeatures:!1,uncombineFeatures:!1,trash:t.selectedCoordPaths.length>0})},startDragging:function(t,e){this.map.dragPan.disable(),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},stopDragging:function(t){this.map.dragPan.enable(),t.dragMoving=!1,t.canDragMove=!1,t.dragMoveLocation=null},onVertex:function(t,e){this.startDragging(t,e);var n=e.featureTarget.properties,o=t.selectedCoordPaths.indexOf(n.coord_path);dt(e)||-1!==o?dt(e)&&-1===o&&t.selectedCoordPaths.push(n.coord_path):t.selectedCoordPaths=[n.coord_path];var r=this.pathsToCoordinates(t.featureId,t.selectedCoordPaths);this.setSelectedCoordinates(r)},onMidpoint:function(t,e){this.startDragging(t,e);var n=e.featureTarget.properties;t.feature.addCoordinate(n.coord_path,n.lng,n.lat),this.fireUpdate(),t.selectedCoordPaths=[n.coord_path]},pathsToCoordinates:function(t,e){return e.map((function(e){return{feature_id:t,coord_path:e}}))},onFeature:function(t,e){0===t.selectedCoordPaths.length?this.startDragging(t,e):this.stopDragging(t)},dragFeature:function(t,e,n){Qt(this.getSelected(),n),t.dragMoveLocation=e.lngLat},dragVertex:function(t,e,n){for(var o=t.selectedCoordPaths.map((function(e){return t.feature.getCoordinate(e)})),r=Kt(o.map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t}}})),n),i=0;i<o.length;i++){var a=o[i];t.feature.updateCoordinate(t.selectedCoordPaths[i],a[0]+r.lng,a[1]+r.lat)}},clickNoTarget:function(){this.changeMode(h.SIMPLE_SELECT)},clickInactive:function(){this.changeMode(h.SIMPLE_SELECT)},clickActiveFeature:function(t){t.selectedCoordPaths=[],this.clearSelectedCoordinates(),t.feature.changed()},onSetup:function(t){var e=t.featureId,n=this.getFeature(e);if(!n)throw new Error(\"You must provide a featureId to enter direct_select mode\");if(n.type===f.POINT)throw new TypeError(\"direct_select mode doesn't handle point features\");var o={featureId:e,feature:n,dragMoveLocation:t.startPos||null,dragMoving:!1,canDragMove:!1,selectedCoordPaths:t.coordPath?[t.coordPath]:[]};return this.setSelectedCoordinates(this.pathsToCoordinates(e,o.selectedCoordPaths)),this.setSelected(e),Tt.disable(this),this.setActionableState({trash:!0}),o},onStop:function(){Tt.enable(this),this.clearSelectedCoordinates()},toDisplayFeatures:function(t,e,n){t.featureId===e.properties.id?(e.properties.active=m.ACTIVE,n(e),Et(e,{map:this.map,midpoints:!0,selectedPaths:t.selectedCoordPaths}).forEach(n)):(e.properties.active=m.INACTIVE,n(e)),this.fireActionable(t)},onTrash:function(t){t.selectedCoordPaths.sort((function(t,e){return e.localeCompare(t,\"en\",{numeric:!0})})).forEach((function(e){return t.feature.removeCoordinate(e)})),this.fireUpdate(),t.selectedCoordPaths=[],this.clearSelectedCoordinates(),this.fireActionable(t),!1===t.feature.isValid()&&(this.deleteFeature([t.featureId]),this.changeMode(h.SIMPLE_SELECT,{}))},onMouseMove:function(t,e){var n=at(e),o=ee(e),r=ne(e),i=0===t.selectedCoordPaths.length;return n&&i||o&&!i?this.updateUIClasses({mouse:d.MOVE}):this.updateUIClasses({mouse:d.NONE}),(o||n||r)&&t.dragMoving&&this.fireUpdate(),this.stopDragging(t),!0},onMouseOut:function(t){return t.dragMoving&&this.fireUpdate(),!0}};oe.onTouchStart=oe.onMouseDown=function(t,e){return ee(e)?this.onVertex(t,e):at(e)?this.onFeature(t,e):ne(e)?this.onMidpoint(t,e):void 0},oe.onDrag=function(t,e){if(!0===t.canDragMove){t.dragMoving=!0,e.originalEvent.stopPropagation();var n={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};t.selectedCoordPaths.length>0?this.dragVertex(t,e,n):this.dragFeature(t,e,n),t.dragMoveLocation=e.lngLat}},oe.onClick=function(t,e){return ut(e)?this.clickNoTarget(t,e):at(e)?this.clickActiveFeature(t,e):st(e)?this.clickInactive(t,e):void this.stopDragging(t)},oe.onTap=function(t,e){return ut(e)?this.clickNoTarget(t,e):at(e)?this.clickActiveFeature(t,e):st(e)?this.clickInactive(t,e):void 0},oe.onTouchEnd=oe.onMouseUp=function(t){t.dragMoving&&this.fireUpdate(),this.stopDragging(t)};var re={};function ie(t,e){return!!t.lngLat&&(t.lngLat.lng===e[0]&&t.lngLat.lat===e[1])}re.onSetup=function(){var t=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:[]}});return this.addFeature(t),this.clearSelectedFeatures(),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.POINT),this.setActionableState({trash:!0}),{point:t}},re.stopDrawingAndRemove=function(t){this.deleteFeature([t.point.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)},re.onTap=re.onClick=function(t,e){this.updateUIClasses({mouse:d.MOVE}),t.point.updateCoordinate(\"\",e.lngLat.lng,e.lngLat.lat),this.map.fire(g.CREATE,{features:[t.point.toGeoJSON()]}),this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.point.id]})},re.onStop=function(t){this.activateUIButton(),t.point.getCoordinate().length||this.deleteFeature([t.point.id],{silent:!0})},re.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.point.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e)},re.onTrash=re.stopDrawingAndRemove,re.onKeyUp=function(t,e){if(pt(e)||ft(e))return this.stopDrawingAndRemove(t,e)};var ae={onSetup:function(){var t=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.POLYGON,coordinates:[[]]}});return this.addFeature(t),this.clearSelectedFeatures(),Tt.disable(this),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.POLYGON),this.setActionableState({trash:!0}),{polygon:t,currentVertexPosition:0}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&ie(e,t.polygon.coordinates[0][t.currentVertexPosition-1]))return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]});this.updateUIClasses({mouse:d.ADD}),t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),t.currentVertexPosition++,t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},onMouseMove:function(t,e){t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),lt(e)&&this.updateUIClasses({mouse:d.POINTER})}};ae.onTap=ae.onClick=function(t,e){return lt(e)?this.clickOnVertex(t,e):this.clickAnywhere(t,e)},ae.onKeyUp=function(t,e){pt(e)?(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)):ft(e)&&this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},ae.onStop=function(t){this.updateUIClasses({mouse:d.NONE}),Tt.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.polygon.id)&&(t.polygon.removeCoordinate(\"0.\"+t.currentVertexPosition),t.polygon.isValid()?this.map.fire(g.CREATE,{features:[t.polygon.toGeoJSON()]}):(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT,{},{silent:!0})))},ae.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.polygon.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e);if(0!==e.geometry.coordinates.length){var r=e.geometry.coordinates[0].length;if(!(r<3)){if(e.properties.meta=v.FEATURE,n(_t(t.polygon.id,e.geometry.coordinates[0][0],\"0.0\",!1)),r>3){var i=e.geometry.coordinates[0].length-3;n(_t(t.polygon.id,e.geometry.coordinates[0][i],\"0.\"+i,!1))}if(r<=4){var a=[[e.geometry.coordinates[0][0][0],e.geometry.coordinates[0][0][1]],[e.geometry.coordinates[0][1][0],e.geometry.coordinates[0][1][1]]];if(n({type:f.FEATURE,properties:e.properties,geometry:{coordinates:a,type:f.LINE_STRING}}),3===r)return}return n(e)}}},ae.onTrash=function(t){this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)};var se={onSetup:function(t){var e,n,o=(t=t||{}).featureId,r=\"forward\";if(o){if(!(e=this.getFeature(o)))throw new Error(\"Could not find a feature with the provided featureId\");var i=t.from;if(i&&\"Feature\"===i.type&&i.geometry&&\"Point\"===i.geometry.type&&(i=i.geometry),i&&\"Point\"===i.type&&i.coordinates&&2===i.coordinates.length&&(i=i.coordinates),!i||!Array.isArray(i))throw new Error(\"Please use the `from` property to indicate which point to continue the line from\");var a=e.coordinates.length-1;if(e.coordinates[a][0]===i[0]&&e.coordinates[a][1]===i[1])n=a+1,e.addCoordinate.apply(e,[n].concat(e.coordinates[a]));else{if(e.coordinates[0][0]!==i[0]||e.coordinates[0][1]!==i[1])throw new Error(\"`from` should match the point at either the start or the end of the provided LineString\");r=\"backwards\",n=0,e.addCoordinate.apply(e,[n].concat(e.coordinates[0]))}}else e=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.LINE_STRING,coordinates:[]}}),n=0,this.addFeature(e);return this.clearSelectedFeatures(),Tt.disable(this),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.LINE),this.setActionableState({trash:!0}),{line:e,currentVertexPosition:n,direction:r}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&ie(e,t.line.coordinates[t.currentVertexPosition-1])||\"backwards\"===t.direction&&ie(e,t.line.coordinates[t.currentVertexPosition+1]))return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]});this.updateUIClasses({mouse:d.ADD}),t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),\"forward\"===t.direction?(t.currentVertexPosition++,t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)):t.line.addCoordinate(0,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]})},onMouseMove:function(t,e){t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),lt(e)&&this.updateUIClasses({mouse:d.POINTER})}};se.onTap=se.onClick=function(t,e){if(lt(e))return this.clickOnVertex(t,e);this.clickAnywhere(t,e)},se.onKeyUp=function(t,e){ft(e)?this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]}):pt(e)&&(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT))},se.onStop=function(t){Tt.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.line.id)&&(t.line.removeCoordinate(\"\"+t.currentVertexPosition),t.line.isValid()?this.map.fire(g.CREATE,{features:[t.line.toGeoJSON()]}):(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT,{},{silent:!0})))},se.onTrash=function(t){this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)},se.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.line.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e);e.geometry.coordinates.length<2||(e.properties.meta=v.FEATURE,n(_t(t.line.id,e.geometry.coordinates[\"forward\"===t.direction?e.geometry.coordinates.length-2:1],\"\"+(\"forward\"===t.direction?e.geometry.coordinates.length-2:1),!1)),n(e))};var ue={simple_select:te,direct_select:oe,draw_point:re,draw_polygon:ae,draw_line_string:se},ce={defaultMode:h.SIMPLE_SELECT,keybindings:!0,touchEnabled:!0,clickBuffer:2,touchBuffer:25,boxSelect:!0,displayControlsDefault:!0,styles:ot,modes:ue,controls:{},userProperties:!1},le={point:!0,line_string:!0,polygon:!0,trash:!0,combine_features:!0,uncombine_features:!0},de={point:!1,line_string:!1,polygon:!1,trash:!1,combine_features:!1,uncombine_features:!1};function pe(t,e){return t.map((function(t){return t.source?t:tt(t,{id:t.id+\".\"+e,source:\"hot\"===e?l.HOT:l.COLD})}))}var fe={exports:{}};!function(t,e){var n=\"__lodash_hash_undefined__\",o=9007199254740991,r=\"[object Arguments]\",i=\"[object Array]\",a=\"[object Boolean]\",s=\"[object Date]\",u=\"[object Error]\",c=\"[object Function]\",l=\"[object Map]\",d=\"[object Number]\",p=\"[object Object]\",f=\"[object Promise]\",h=\"[object RegExp]\",g=\"[object Set]\",y=\"[object String]\",v=\"[object Symbol]\",m=\"[object WeakMap]\",_=\"[object ArrayBuffer]\",b=\"[object DataView]\",E=/^\\[object .+?Constructor\\]$/,T=/^(?:0|[1-9]\\d*)$/,C={};C[\"[object Float32Array]\"]=C[\"[object Float64Array]\"]=C[\"[object Int8Array]\"]=C[\"[object Int16Array]\"]=C[\"[object Int32Array]\"]=C[\"[object Uint8Array]\"]=C[\"[object Uint8ClampedArray]\"]=C[\"[object Uint16Array]\"]=C[\"[object Uint32Array]\"]=!0,C[r]=C[i]=C[_]=C[a]=C[b]=C[s]=C[u]=C[c]=C[l]=C[d]=C[p]=C[h]=C[g]=C[y]=C[m]=!1;var O=\"object\"==typeof global&&global&&global.Object===Object&&global,S=\"object\"==typeof self&&self&&self.Object===Object&&self,I=O||S||Function(\"return this\")(),x=e&&!e.nodeType&&e,M=x&&t&&!t.nodeType&&t,L=M&&M.exports===x,N=L&&O.process,A=function(){try{return N&&N.binding&&N.binding(\"util\")}catch(t){}}(),P=A&&A.isTypedArray;function F(t,e){for(var n=-1,o=null==t?0:t.length;++n<o;)if(e(t[n],n,t))return!0;return!1}function w(t){var e=-1,n=Array(t.size);return t.forEach((function(t,o){n[++e]=[o,t]})),n}function R(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}var D,k,U,j=Array.prototype,V=Function.prototype,B=Object.prototype,G=I[\"__core-js_shared__\"],J=V.toString,z=B.hasOwnProperty,Y=(D=/[^.]+$/.exec(G&&G.keys&&G.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+D:\"\",$=B.toString,q=RegExp(\"^\"+J.call(z).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),H=L?I.Buffer:void 0,X=I.Symbol,Z=I.Uint8Array,W=B.propertyIsEnumerable,K=j.splice,Q=X?X.toStringTag:void 0,tt=Object.getOwnPropertySymbols,et=H?H.isBuffer:void 0,nt=(k=Object.keys,U=Object,function(t){return k(U(t))}),ot=At(I,\"DataView\"),rt=At(I,\"Map\"),it=At(I,\"Promise\"),at=At(I,\"Set\"),st=At(I,\"WeakMap\"),ut=At(Object,\"create\"),ct=Rt(ot),lt=Rt(rt),dt=Rt(it),pt=Rt(at),ft=Rt(st),ht=X?X.prototype:void 0,gt=ht?ht.valueOf:void 0;function yt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function vt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function mt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function _t(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new mt;++e<n;)this.add(t[e])}function bt(t){var e=this.__data__=new vt(t);this.size=e.size}function Et(t,e){var n=Ut(t),o=!n&&kt(t),r=!n&&!o&&jt(t),i=!n&&!o&&!r&&zt(t),a=n||o||r||i,s=a?function(t,e){for(var n=-1,o=Array(t);++n<t;)o[n]=e(n);return o}(t.length,String):[],u=s.length;for(var c in t)!e&&!z.call(t,c)||a&&(\"length\"==c||r&&(\"offset\"==c||\"parent\"==c)||i&&(\"buffer\"==c||\"byteLength\"==c||\"byteOffset\"==c)||wt(c,u))||s.push(c);return s}function Tt(t,e){for(var n=t.length;n--;)if(Dt(t[n][0],e))return n;return-1}function Ct(t){return null==t?void 0===t?\"[object Undefined]\":\"[object Null]\":Q&&Q in Object(t)?function(t){var e=z.call(t,Q),n=t[Q];try{t[Q]=void 0;var o=!0}catch(t){}var r=$.call(t);o&&(e?t[Q]=n:delete t[Q]);return r}(t):function(t){return $.call(t)}(t)}function Ot(t){return Jt(t)&&Ct(t)==r}function St(t,e,n,o,c){return t===e||(null==t||null==e||!Jt(t)&&!Jt(e)?t!=t&&e!=e:function(t,e,n,o,c,f){var m=Ut(t),E=Ut(e),T=m?i:Ft(t),C=E?i:Ft(e),O=(T=T==r?p:T)==p,S=(C=C==r?p:C)==p,I=T==C;if(I&&jt(t)){if(!jt(e))return!1;m=!0,O=!1}if(I&&!O)return f||(f=new bt),m||zt(t)?Mt(t,e,n,o,c,f):function(t,e,n,o,r,i,c){switch(n){case b:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case _:return!(t.byteLength!=e.byteLength||!i(new Z(t),new Z(e)));case a:case s:case d:return Dt(+t,+e);case u:return t.name==e.name&&t.message==e.message;case h:case y:return t==e+\"\";case l:var p=w;case g:var f=1&o;if(p||(p=R),t.size!=e.size&&!f)return!1;var m=c.get(t);if(m)return m==e;o|=2,c.set(t,e);var E=Mt(p(t),p(e),o,r,i,c);return c.delete(t),E;case v:if(gt)return gt.call(t)==gt.call(e)}return!1}(t,e,T,n,o,c,f);if(!(1&n)){var x=O&&z.call(t,\"__wrapped__\"),M=S&&z.call(e,\"__wrapped__\");if(x||M){var L=x?t.value():t,N=M?e.value():e;return f||(f=new bt),c(L,N,n,o,f)}}if(!I)return!1;return f||(f=new bt),function(t,e,n,o,r,i){var a=1&n,s=Lt(t),u=s.length,c=Lt(e).length;if(u!=c&&!a)return!1;var l=u;for(;l--;){var d=s[l];if(!(a?d in e:z.call(e,d)))return!1}var p=i.get(t);if(p&&i.get(e))return p==e;var f=!0;i.set(t,e),i.set(e,t);var h=a;for(;++l<u;){var g=t[d=s[l]],y=e[d];if(o)var v=a?o(y,g,d,e,t,i):o(g,y,d,t,e,i);if(!(void 0===v?g===y||r(g,y,n,o,i):v)){f=!1;break}h||(h=\"constructor\"==d)}if(f&&!h){var m=t.constructor,_=e.constructor;m==_||!(\"constructor\"in t)||!(\"constructor\"in e)||\"function\"==typeof m&&m instanceof m&&\"function\"==typeof _&&_ instanceof _||(f=!1)}return i.delete(t),i.delete(e),f}(t,e,n,o,c,f)}(t,e,n,o,St,c))}function It(t){return!(!Gt(t)||function(t){return!!Y&&Y in t}(t))&&(Vt(t)?q:E).test(Rt(t))}function xt(t){if(n=(e=t)&&e.constructor,o=\"function\"==typeof n&&n.prototype||B,e!==o)return nt(t);var e,n,o,r=[];for(var i in Object(t))z.call(t,i)&&\"constructor\"!=i&&r.push(i);return r}function Mt(t,e,n,o,r,i){var a=1&n,s=t.length,u=e.length;if(s!=u&&!(a&&u>s))return!1;var c=i.get(t);if(c&&i.get(e))return c==e;var l=-1,d=!0,p=2&n?new _t:void 0;for(i.set(t,e),i.set(e,t);++l<s;){var f=t[l],h=e[l];if(o)var g=a?o(h,f,l,e,t,i):o(f,h,l,t,e,i);if(void 0!==g){if(g)continue;d=!1;break}if(p){if(!F(e,(function(t,e){if(a=e,!p.has(a)&&(f===t||r(f,t,n,o,i)))return p.push(e);var a}))){d=!1;break}}else if(f!==h&&!r(f,h,n,o,i)){d=!1;break}}return i.delete(t),i.delete(e),d}function Lt(t){return function(t,e,n){var o=e(t);return Ut(t)?o:function(t,e){for(var n=-1,o=e.length,r=t.length;++n<o;)t[r+n]=e[n];return t}(o,n(t))}(t,Yt,Pt)}function Nt(t,e){var n,o,r=t.__data__;return(\"string\"==(o=typeof(n=e))||\"number\"==o||\"symbol\"==o||\"boolean\"==o?\"__proto__\"!==n:null===n)?r[\"string\"==typeof e?\"string\":\"hash\"]:r.map}function At(t,e){var n=function(t,e){return null==t?void 0:t[e]}(t,e);return It(n)?n:void 0}yt.prototype.clear=function(){this.__data__=ut?ut(null):{},this.size=0},yt.prototype.delete=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e},yt.prototype.get=function(t){var e=this.__data__;if(ut){var o=e[t];return o===n?void 0:o}return z.call(e,t)?e[t]:void 0},yt.prototype.has=function(t){var e=this.__data__;return ut?void 0!==e[t]:z.call(e,t)},yt.prototype.set=function(t,e){var o=this.__data__;return this.size+=this.has(t)?0:1,o[t]=ut&&void 0===e?n:e,this},vt.prototype.clear=function(){this.__data__=[],this.size=0},vt.prototype.delete=function(t){var e=this.__data__,n=Tt(e,t);return!(n<0)&&(n==e.length-1?e.pop():K.call(e,n,1),--this.size,!0)},vt.prototype.get=function(t){var e=this.__data__,n=Tt(e,t);return n<0?void 0:e[n][1]},vt.prototype.has=function(t){return Tt(this.__data__,t)>-1},vt.prototype.set=function(t,e){var n=this.__data__,o=Tt(n,t);return o<0?(++this.size,n.push([t,e])):n[o][1]=e,this},mt.prototype.clear=function(){this.size=0,this.__data__={hash:new yt,map:new(rt||vt),string:new yt}},mt.prototype.delete=function(t){var e=Nt(this,t).delete(t);return this.size-=e?1:0,e},mt.prototype.get=function(t){return Nt(this,t).get(t)},mt.prototype.has=function(t){return Nt(this,t).has(t)},mt.prototype.set=function(t,e){var n=Nt(this,t),o=n.size;return n.set(t,e),this.size+=n.size==o?0:1,this},_t.prototype.add=_t.prototype.push=function(t){return this.__data__.set(t,n),this},_t.prototype.has=function(t){return this.__data__.has(t)},bt.prototype.clear=function(){this.__data__=new vt,this.size=0},bt.prototype.delete=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n},bt.prototype.get=function(t){return this.__data__.get(t)},bt.prototype.has=function(t){return this.__data__.has(t)},bt.prototype.set=function(t,e){var n=this.__data__;if(n instanceof vt){var o=n.__data__;if(!rt||o.length<199)return o.push([t,e]),this.size=++n.size,this;n=this.__data__=new mt(o)}return n.set(t,e),this.size=n.size,this};var Pt=tt?function(t){return null==t?[]:(t=Object(t),function(t,e){for(var n=-1,o=null==t?0:t.length,r=0,i=[];++n<o;){var a=t[n];e(a,n,t)&&(i[r++]=a)}return i}(tt(t),(function(e){return W.call(t,e)})))}:function(){return[]},Ft=Ct;function wt(t,e){return!!(e=null==e?o:e)&&(\"number\"==typeof t||T.test(t))&&t>-1&&t%1==0&&t<e}function Rt(t){if(null!=t){try{return J.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"}function Dt(t,e){return t===e||t!=t&&e!=e}(ot&&Ft(new ot(new ArrayBuffer(1)))!=b||rt&&Ft(new rt)!=l||it&&Ft(it.resolve())!=f||at&&Ft(new at)!=g||st&&Ft(new st)!=m)&&(Ft=function(t){var e=Ct(t),n=e==p?t.constructor:void 0,o=n?Rt(n):\"\";if(o)switch(o){case ct:return b;case lt:return l;case dt:return f;case pt:return g;case ft:return m}return e});var kt=Ot(function(){return arguments}())?Ot:function(t){return Jt(t)&&z.call(t,\"callee\")&&!W.call(t,\"callee\")},Ut=Array.isArray;var jt=et||function(){return!1};function Vt(t){if(!Gt(t))return!1;var e=Ct(t);return e==c||\"[object GeneratorFunction]\"==e||\"[object AsyncFunction]\"==e||\"[object Proxy]\"==e}function Bt(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=o}function Gt(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}function Jt(t){return null!=t&&\"object\"==typeof t}var zt=P?function(t){return function(e){return t(e)}}(P):function(t){return Jt(t)&&Bt(t.length)&&!!C[Ct(t)]};function Yt(t){return null!=(e=t)&&Bt(e.length)&&!Vt(e)?Et(t):xt(t);var e}t.exports=function(t,e){return St(t,e)}}(fe,fe.exports);var he=e(fe.exports);function ge(t,e){return t.length===e.length&&JSON.stringify(t.map((function(t){return t})).sort())===JSON.stringify(e.map((function(t){return t})).sort())}var ye={Polygon:V,LineString:j,Point:U,MultiPolygon:J,MultiLineString:J,MultiPoint:J};var ve=Object.freeze({__proto__:null,CommonSelectors:ht,constrainFeatureMovement:Kt,createMidPoint:bt,createSupplementaryPoints:Et,createVertex:_t,doubleClickZoom:Tt,euclideanDistance:A,featuresAt:M,getFeatureAtAndSetCursors:N,isClick:P,isEventAtCoordinates:ie,isTap:F,mapEventToBoundingBox:S,ModeHandler:t,moveFeatures:Qt,sortFeatures:O,stringSetsAreEqual:ge,StringSet:I,theme:ot,toDenseArray:H}),me=function(t,e){var n={options:t=function(t){void 0===t&&(t={});var e=tt(t);return t.controls||(e.controls={}),!1===t.displayControlsDefault?e.controls=tt(de,t.controls):e.controls=tt(le,t.controls),(e=tt(ce,e)).styles=pe(e.styles,\"cold\").concat(pe(e.styles,\"hot\")),e}(t)};e=function(t,e){return e.modes=h,e.getFeatureIdsAt=function(e){return M.click({point:e},null,t).map((function(t){return t.properties.id}))},e.getSelectedIds=function(){return t.store.getSelectedIds()},e.getSelected=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getSelectedIds().map((function(e){return t.store.get(e)})).map((function(t){return t.toGeoJSON()}))}},e.getSelectedPoints=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getSelectedCoordinates().map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t.coordinates}}}))}},e.set=function(n){if(void 0===n.type||n.type!==f.FEATURE_COLLECTION||!Array.isArray(n.features))throw new Error(\"Invalid FeatureCollection\");var o=t.store.createRenderBatch(),r=t.store.getAllIds().slice(),i=e.add(n),a=new I(i);return(r=r.filter((function(t){return!a.has(t)}))).length&&e.delete(r),o(),i},e.add=function(e){var n=JSON.parse(JSON.stringify(It(e))).features.map((function(e){if(e.id=e.id||D(),null===e.geometry)throw new Error(\"Invalid geometry: null\");if(void 0===t.store.get(e.id)||t.store.get(e.id).type!==e.geometry.type){var n=ye[e.geometry.type];if(void 0===n)throw new Error(\"Invalid geometry type: \"+e.geometry.type+\".\");var o=new n(t,e);t.store.add(o)}else{var r=t.store.get(e.id);r.properties=e.properties,he(r.getCoordinates(),e.geometry.coordinates)||r.incomingCoords(e.geometry.coordinates)}return e.id}));return t.store.render(),n},e.get=function(e){var n=t.store.get(e);if(n)return n.toGeoJSON()},e.getAll=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getAll().map((function(t){return t.toGeoJSON()}))}},e.delete=function(n){return t.store.delete(n,{silent:!0}),e.getMode()!==h.DIRECT_SELECT||t.store.getSelectedIds().length?t.store.render():t.events.changeMode(h.SIMPLE_SELECT,void 0,{silent:!0}),e},e.deleteAll=function(){return t.store.delete(t.store.getAllIds(),{silent:!0}),e.getMode()===h.DIRECT_SELECT?t.events.changeMode(h.SIMPLE_SELECT,void 0,{silent:!0}):t.store.render(),e},e.changeMode=function(n,o){return void 0===o&&(o={}),n===h.SIMPLE_SELECT&&e.getMode()===h.SIMPLE_SELECT?(ge(o.featureIds||[],t.store.getSelectedIds())||(t.store.setSelected(o.featureIds,{silent:!0}),t.store.render()),e):(n===h.DIRECT_SELECT&&e.getMode()===h.DIRECT_SELECT&&o.featureId===t.store.getSelectedIds()[0]||t.events.changeMode(n,o,{silent:!0}),e)},e.getMode=function(){return t.events.getMode()},e.trash=function(){return t.events.trash({silent:!0}),e},e.combineFeatures=function(){return t.events.combineFeatures({silent:!0}),e},e.uncombineFeatures=function(){return t.events.uncombineFeatures({silent:!0}),e},e.setFeatureProperty=function(n,o,r){return t.store.setFeatureProperty(n,o,r),e},e}(n,e),n.api=e;var o=nt(n);return e.onAdd=o.onAdd,e.onRemove=o.onRemove,e.types=p,e.options=t,e};function _e(t){me(t,this)}return _e.modes=ue,_e.constants=E,_e.lib=ve,_e}));\n//# sourceMappingURL=mapbox-gl-draw.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            helpers.feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = helpers.lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              helpers.lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return helpers.lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return helpers.point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return helpers.point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return helpers.point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return helpers.point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexports.coordAll = coordAll;\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.findPoint = findPoint;\nexports.findSegment = findSegment;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\n","var rbush = require('rbush');\nvar helpers = require('@turf/helpers');\nvar meta = require('@turf/meta');\nvar turfBBox = require('@turf/bbox').default;\nvar featureEach = meta.featureEach;\nvar coordEach = meta.coordEach;\nvar polygon = helpers.polygon;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * var geojsonRbush = require('geojson-rbush').default;\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = new rbush(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     * tree.insert(poly)\n     */\n    tree.insert = function (feature) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {FeatureCollection|Array<Feature>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polys = turf.polygons([\n     *     [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]],\n     *     [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     * ]);\n     * tree.load(polys);\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of Features\n        if (Array.isArray(features)) {\n            features.forEach(function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        } else {\n            // Load a FeatureCollection\n            featureEach(features, function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {Feature} feature remove single GeoJSON Feature\n     * @param {Function} equals Pass a custom equals function to compare by value for removal.\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.remove(poly);\n     */\n    tree.remove = function (feature, equals) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.remove.call(this, feature, equals);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson search with GeoJSON\n     * @returns {FeatureCollection} all features that intersects with the given GeoJSON.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.search(poly);\n     */\n    tree.search = function (geojson) {\n        var features = rbush.prototype.search.call(this, this.toBBox(geojson));\n        return featureCollection(features);\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.collides(poly);\n     */\n    tree.collides = function (geojson) {\n        return rbush.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection} all the features in RBush\n     * @example\n     * tree.all()\n     */\n    tree.all = function () {\n        var features = rbush.prototype.all.call(this);\n        return featureCollection(features);\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     */\n    tree.toJSON = function () {\n        return rbush.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollection|Feature} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else if (Array.isArray(geojson) && geojson.length === 6) bbox = [geojson[0], geojson[1], geojson[3], geojson[4]];\n        else if (geojson.type === 'Feature') bbox = turfBBox(geojson);\n        else if (geojson.type === 'FeatureCollection') bbox = turfBBox(geojson);\n        else throw new Error('invalid geojson')\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\nmodule.exports = geojsonRbush;\nmodule.exports.default = geojsonRbush;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import { getCoord, getGeom } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nexport default function booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = getCoord(point);\n    var geom = getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { featureCollection, lineString, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a\n * {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {GeoJSON} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    var results = [];\n    flattenEach(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return featureCollection(results);\n}\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    if (geometry !== null) {\n        switch (geometry.type) {\n            case \"Polygon\":\n                coords = getCoords(geometry);\n                break;\n            case \"LineString\":\n                coords = [getCoords(geometry)];\n        }\n        coords.forEach(function (coord) {\n            var segments = createSegments(coord, geojson.properties);\n            segments.forEach(function (segment) {\n                segment.id = results.length;\n                results.push(segment);\n            });\n        });\n    }\n}\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = x1 < x2 ? x1 : x2;\n    var south = y1 < y2 ? y1 : y2;\n    var east = x1 > x2 ? x1 : x2;\n    var north = y1 > y2 ? y1 : y2;\n    return [west, south, east, north];\n}\nexport default lineSegment;\n","import { feature, featureCollection, point, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport lineSegment from \"@turf/line-segment\";\nimport { featureEach } from \"@turf/meta\";\nimport rbush from \"geojson-rbush\";\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {GeoJSON} line1 any LineString or Polygon\n * @param {GeoJSON} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === \"LineString\") {\n        line1 = feature(line1);\n    }\n    if (line2.type === \"LineString\") {\n        line2 = feature(line2);\n    }\n    if (line1.type === \"Feature\" &&\n        line2.type === \"Feature\" &&\n        line1.geometry !== null &&\n        line2.geometry !== null &&\n        line1.geometry.type === \"LineString\" &&\n        line2.geometry.type === \"LineString\" &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) {\n            results.push(intersect);\n        }\n        return featureCollection(results);\n    }\n    // Handles complex GeoJSON Geometries\n    var tree = rbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = getCoords(intersect).join(\",\");\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n}\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error(\"<intersects> line1 must only contain 2 coordinates\");\n    }\n    if (coords2.length !== 2) {\n        throw new Error(\"<intersects> line2 must only contain 2 coordinates\");\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return point([x, y]);\n    }\n    return null;\n}\nexport default lineIntersect;\n","import { featureCollection, lineString, multiLineString } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n/**\n * Converts a {@link Polygon} to {@link LineString|(Multi)LineString} or {@link MultiPolygon} to a\n * {@link FeatureCollection} of {@link LineString|(Multi)LineString}.\n *\n * @name polygonToLine\n * @param {Feature<Polygon|MultiPolygon>} poly Feature to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @returns {FeatureCollection|Feature<LineString|MultiLinestring>} converted (Multi)Polygon to (Multi)LineString\n * @example\n * var poly = turf.polygon([[[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]]);\n *\n * var line = turf.polygonToLine(poly);\n *\n * //addToMap\n * var addToMap = [line];\n */\nexport default function (poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(poly);\n    if (!options.properties && poly.type === \"Feature\") {\n        options.properties = poly.properties;\n    }\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonToLine(geom, options);\n        case \"MultiPolygon\":\n            return multiPolygonToLine(geom, options);\n        default:\n            throw new Error(\"invalid poly\");\n    }\n}\n/**\n * @private\n */\nexport function polygonToLine(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(poly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : poly.type === \"Feature\"\n            ? poly.properties\n            : {};\n    return coordsToLine(coords, properties);\n}\n/**\n * @private\n */\nexport function multiPolygonToLine(multiPoly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(multiPoly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : multiPoly.type === \"Feature\"\n            ? multiPoly.properties\n            : {};\n    var lines = [];\n    coords.forEach(function (coord) {\n        lines.push(coordsToLine(coord, properties));\n    });\n    return featureCollection(lines);\n}\n/**\n * @private\n */\nexport function coordsToLine(coords, properties) {\n    if (coords.length > 1) {\n        return multiLineString(coords, properties);\n    }\n    return lineString(coords[0], properties);\n}\n","import booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport lineIntersect from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport polygonToLine from \"@turf/polygon-to-line\";\n/**\n * Boolean-disjoint returns (TRUE) if the intersection of the two geometries is an empty set.\n *\n * @name booleanDisjoint\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanDisjoint(line, point);\n * //=true\n */\nfunction booleanDisjoint(feature1, feature2) {\n    var bool = true;\n    flattenEach(feature1, function (flatten1) {\n        flattenEach(feature2, function (flatten2) {\n            if (bool === false) {\n                return false;\n            }\n            bool = disjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\n/**\n * Disjoint operation for simple Geometries (Point/LineString/Polygon)\n *\n * @private\n * @param {Geometry<any>} geom1 GeoJSON Geometry\n * @param {Geometry<any>} geom2 GeoJSON Geometry\n * @returns {boolean} true/false\n */\nfunction disjoint(geom1, geom2) {\n    switch (geom1.type) {\n        case \"Point\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !compareCoords(geom1.coordinates, geom2.coordinates);\n                case \"LineString\":\n                    return !isPointOnLine(geom2, geom1);\n                case \"Polygon\":\n                    return !booleanPointInPolygon(geom1, geom2);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"LineString\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !isPointOnLine(geom1, geom2);\n                case \"LineString\":\n                    return !isLineOnLine(geom1, geom2);\n                case \"Polygon\":\n                    return !isLineInPoly(geom2, geom1);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"Polygon\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !booleanPointInPolygon(geom2, geom1);\n                case \"LineString\":\n                    return !isLineInPoly(geom1, geom2);\n                case \"Polygon\":\n                    return !isPolyInPoly(geom2, geom1);\n            }\n    }\n    return false;\n}\n// http://stackoverflow.com/a/11908158/1979085\nfunction isPointOnLine(lineString, pt) {\n    for (var i = 0; i < lineString.coordinates.length - 1; i++) {\n        if (isPointOnLineSegment(lineString.coordinates[i], lineString.coordinates[i + 1], pt.coordinates)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isLineOnLine(lineString1, lineString2) {\n    var doLinesIntersect = lineIntersect(lineString1, lineString2);\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isLineInPoly(polygon, lineString) {\n    for (var _i = 0, _a = lineString.coordinates; _i < _a.length; _i++) {\n        var coord = _a[_i];\n        if (booleanPointInPolygon(coord, polygon)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = lineIntersect(lineString, polygonToLine(polygon));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\n/**\n * Is Polygon (geom1) in Polygon (geom2)\n * Only takes into account outer rings\n * See http://stackoverflow.com/a/4833823/1979085\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(feature1, feature2) {\n    for (var _i = 0, _a = feature1.coordinates[0]; _i < _a.length; _i++) {\n        var coord1 = _a[_i];\n        if (booleanPointInPolygon(coord1, feature2)) {\n            return true;\n        }\n    }\n    for (var _b = 0, _c = feature2.coordinates[0]; _b < _c.length; _b++) {\n        var coord2 = _c[_b];\n        if (booleanPointInPolygon(coord2, feature1)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = lineIntersect(polygonToLine(feature1), polygonToLine(feature2));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt) {\n    var dxc = pt[0] - lineSegmentStart[0];\n    var dyc = pt[1] - lineSegmentStart[1];\n    var dxl = lineSegmentEnd[0] - lineSegmentStart[0];\n    var dyl = lineSegmentEnd[1] - lineSegmentStart[1];\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n        if (dxl > 0) {\n            return lineSegmentStart[0] <= pt[0] && pt[0] <= lineSegmentEnd[0];\n        }\n        else {\n            return lineSegmentEnd[0] <= pt[0] && pt[0] <= lineSegmentStart[0];\n        }\n    }\n    else if (dyl > 0) {\n        return lineSegmentStart[1] <= pt[1] && pt[1] <= lineSegmentEnd[1];\n    }\n    else {\n        return lineSegmentEnd[1] <= pt[1] && pt[1] <= lineSegmentStart[1];\n    }\n}\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nexport default booleanDisjoint;\n","import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, } from \"@turf/helpers\";\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexport default distance;\n","import { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nexport default function bearing(start, end, options) {\n    if (options === void 0) { options = {}; }\n    // Reverse calculation\n    if (options.final === true) {\n        return calculateFinalBearing(start, end);\n    }\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n    var lon1 = degreesToRadians(coordinates1[0]);\n    var lon2 = degreesToRadians(coordinates2[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n    return radiansToDegrees(Math.atan2(a, b));\n}\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n","// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\nimport { degreesToRadians, lengthToRadians, point, radiansToDegrees, } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in\n * degrees, radians, miles, or kilometers; and bearing in degrees.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nexport default function destination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    // Handle input\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearingRad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, options.units);\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n    var longitude2 = longitude1 +\n        Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = radiansToDegrees(longitude2);\n    var lat = radiansToDegrees(latitude2);\n    return point([lng, lat], options.properties);\n}\n","import bearing from \"@turf/bearing\";\nimport distance from \"@turf/distance\";\nimport destination from \"@turf/destination\";\nimport lineIntersects from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport { point, lineString, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the (Multi)LineString.\n *\n * @name nearestPointOnLine\n * @param {Geometry|Feature<LineString|MultiLineString>} lines lines to snap to\n * @param {Geometry|Feature<Point>|number[]} pt point to snap from\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var pt = turf.point([-77.037076, 38.884017]);\n *\n * var snapped = turf.nearestPointOnLine(line, pt, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, pt, snapped];\n * snapped.properties['marker-color'] = '#00f';\n */\nfunction nearestPointOnLine(lines, pt, options) {\n    if (options === void 0) { options = {}; }\n    var closestPt = point([Infinity, Infinity], {\n        dist: Infinity,\n    });\n    var length = 0.0;\n    flattenEach(lines, function (line) {\n        var coords = getCoords(line);\n        for (var i = 0; i < coords.length - 1; i++) {\n            //start\n            var start = point(coords[i]);\n            start.properties.dist = distance(pt, start, options);\n            //stop\n            var stop_1 = point(coords[i + 1]);\n            stop_1.properties.dist = distance(pt, stop_1, options);\n            // sectionLength\n            var sectionLength = distance(start, stop_1, options);\n            //perpendicular\n            var heightDistance = Math.max(start.properties.dist, stop_1.properties.dist);\n            var direction = bearing(start, stop_1);\n            var perpendicularPt1 = destination(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = destination(pt, heightDistance, direction - 90, options);\n            var intersect = lineIntersects(lineString([\n                perpendicularPt1.geometry.coordinates,\n                perpendicularPt2.geometry.coordinates,\n            ]), lineString([start.geometry.coordinates, stop_1.geometry.coordinates]));\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = distance(pt, intersectPt, options);\n                intersectPt.properties.location =\n                    length + distance(start, intersectPt, options);\n            }\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop_1.properties.dist < closestPt.properties.dist) {\n                closestPt = stop_1;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt &&\n                intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            // update length\n            length += sectionLength;\n        }\n    });\n    return closestPt;\n}\nexport default nearestPointOnLine;\n","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\nexport default clone;\n","import clone from \"@turf/clone\";\nimport distance from \"@turf/distance\";\nimport { featureEach } from \"@turf/meta\";\n/**\n * Takes a reference {@link Point|point} and a FeatureCollection of Features\n * with Point geometries and returns the\n * point from the FeatureCollection closest to the reference. This calculation\n * is geodesic.\n *\n * @name nearestPoint\n * @param {Coord} targetPoint the reference point\n * @param {FeatureCollection<Point>} points against input point set\n * @returns {Feature<Point>} the closest point in the set to the reference point\n * @example\n * var targetPoint = turf.point([28.965797, 41.010086], {\"marker-color\": \"#0F0\"});\n * var points = turf.featureCollection([\n *     turf.point([28.973865, 41.011122]),\n *     turf.point([28.948459, 41.024204]),\n *     turf.point([28.938674, 41.013324])\n * ]);\n *\n * var nearest = turf.nearestPoint(targetPoint, points);\n *\n * //addToMap\n * var addToMap = [targetPoint, points, nearest];\n * nearest.properties['marker-color'] = '#F00';\n */\nfunction nearestPoint(targetPoint, points) {\n    // Input validation\n    if (!targetPoint)\n        throw new Error(\"targetPoint is required\");\n    if (!points)\n        throw new Error(\"points is required\");\n    var nearest;\n    var minDist = Infinity;\n    var bestFeatureIndex = 0;\n    featureEach(points, function (pt, featureIndex) {\n        var distanceToPoint = distance(targetPoint, pt);\n        if (distanceToPoint < minDist) {\n            bestFeatureIndex = featureIndex;\n            minDist = distanceToPoint;\n        }\n    });\n    nearest = clone(points.features[bestFeatureIndex]);\n    nearest.properties.featureIndex = bestFeatureIndex;\n    nearest.properties.distanceToPoint = minDist;\n    return nearest;\n}\nexport default nearestPoint;\n","import bearing from '@turf/bearing';\nimport destination from '@turf/destination';\nimport distance from '@turf/distance';\n\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Coord} point1 first point\n * @param {Coord} point2 second point\n * @returns {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var point1 = turf.point([144.834823, -37.771257]);\n * var point2 = turf.point([145.14244, -37.830937]);\n *\n * var midpoint = turf.midpoint(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2, midpoint];\n * midpoint.properties['marker-color'] = '#f00';\n */\nfunction midpoint(point1, point2) {\n  var dist = distance(point1, point2);\n  var heading = bearing(point1, point2);\n  var midpoint = destination(point1, dist / 2, heading);\n\n  return midpoint;\n}\n\nexport default midpoint;\n","// Heavily inspired from work of @davidgilbertson on Github and `leaflet-geoman` project.\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nconst { geojsonTypes } = MapboxDraw.constants;\n\nimport bboxPolygon from \"@turf/bbox-polygon\";\nimport booleanDisjoint from \"@turf/boolean-disjoint\";\nimport { getCoords } from \"@turf/invariant\";\nimport distance from \"@turf/distance\";\nimport polygonToLine from \"@turf/polygon-to-line\";\nimport nearestPointOnLine from \"@turf/nearest-point-on-line\";\nimport nearestPointInPointSet from \"@turf/nearest-point\";\nimport midpoint from \"@turf/midpoint\";\nimport {\n  featureCollection,\n  lineString as turfLineString,\n  point as turfPoint,\n} from \"@turf/helpers\";\n\nexport const IDS = {\n  VERTICAL_GUIDE: \"VERTICAL_GUIDE\",\n  HORIZONTAL_GUIDE: \"HORIZONTAL_GUIDE\",\n};\n\nexport const addPointToVertices = (\n  map,\n  vertices,\n  coordinates,\n  forceInclusion\n) => {\n  const { width: w, height: h } = map.getCanvas();\n  // Just add vertices of features currently visible in viewport\n  const { x, y } = map.project(coordinates);\n  const pointIsOnTheScreen = x > 0 && x < w && y > 0 && y < h;\n\n  // But do add off-screen points if forced (e.g. for the current feature)\n  // So features will always snap to their own points\n  if (pointIsOnTheScreen || forceInclusion) {\n    vertices.push(coordinates);\n  }\n};\n\nexport const createSnapList = (map, draw, currentFeature, getFeatures) => {\n  // Get all features\n  let features = [];\n\n  if (typeof getFeatures === \"function\") {\n    features = getFeatures(map, draw);\n  }\n\n  if (!Array.isArray(features) || features.length === 0) {\n    features = draw.getAll().features;\n  }\n\n  const snapList = [];\n\n  // Get current bbox as polygon\n  const bboxAsPolygon = (() => {\n    const canvas = map.getCanvas(),\n      w = canvas.width,\n      h = canvas.height,\n      cUL = map.unproject([0, 0]).toArray(),\n      cUR = map.unproject([w, 0]).toArray(),\n      cLR = map.unproject([w, h]).toArray(),\n      cLL = map.unproject([0, h]).toArray();\n\n    return bboxPolygon([cLL, cUR].flat());\n  })();\n\n  const vertices = [];\n\n  // Keeps vertices for drawing guides\n  const addVerticesToVertices = (coordinates, isCurrentFeature = false) => {\n    if (!Array.isArray(coordinates)) throw Error(\"Your array is not an array\");\n\n    if (Array.isArray(coordinates[0])) {\n      // coordinates is an array of arrays, we must go deeper\n      coordinates.forEach((coord) => {\n        addVerticesToVertices(coord);\n      });\n    } else {\n      // If not an array of arrays, only consider arrays with two items\n      if (coordinates.length === 2) {\n        addPointToVertices(map, vertices, coordinates, isCurrentFeature);\n      }\n    }\n  };\n\n  features.forEach((feature) => {\n    // For current feature\n    if (feature.id === currentFeature.id) {\n      if (currentFeature.type === geojsonTypes.POLYGON) {\n        // For the current polygon, the last two points are the mouse position and back home\n        // so we chop those off (else we get vertices showing where the user clicked, even\n        // if they were just panning the map)\n        addVerticesToVertices(\n          feature.geometry.coordinates[0].slice(0, -2),\n          true\n        );\n      }\n      return;\n    }\n\n    // If this is re-running because a user is moving the map, the features might include\n    // vertices or the last leg of a polygon\n    if (\n      feature.id === IDS.HORIZONTAL_GUIDE ||\n      feature.id === IDS.VERTICAL_GUIDE\n    )\n      return;\n\n    addVerticesToVertices(feature.geometry.coordinates);\n\n    // If feature is currently on viewport add to snap list\n    if (!booleanDisjoint(bboxAsPolygon, feature)) {\n      snapList.push(feature);\n    }\n  });\n\n  return [snapList, vertices];\n};\n\nconst getNearbyVertices = (vertices, coords) => {\n  const verticals = [];\n  const horizontals = [];\n\n  vertices.forEach((vertex) => {\n    verticals.push(vertex[0]);\n    horizontals.push(vertex[1]);\n  });\n\n  const nearbyVerticalGuide = verticals.find(\n    (px) => Math.abs(px - coords.lng) < 0.009\n  );\n\n  const nearbyHorizontalGuide = horizontals.find(\n    (py) => Math.abs(py - coords.lat) < 0.009\n  );\n\n  return {\n    verticalPx: nearbyVerticalGuide,\n    horizontalPx: nearbyHorizontalGuide,\n  };\n};\n\nconst calcLayerDistances = (lngLat, layer) => {\n  // the point P which we want to snap (probably the marker that is dragged)\n  const P = [lngLat.lng, lngLat.lat];\n\n  // is this a marker?\n  const isMarker = layer.geometry.type === \"Point\";\n  // is it a polygon?\n  const isPolygon = layer.geometry.type === \"Polygon\";\n  // is it a multiPolygon?\n  const isMultiPolygon = layer.geometry.type === \"MultiPolygon\";\n  // is it a multiPoint?\n  const isMultiPoint = layer.geometry.type === \"MultiPoint\";\n\n  let lines = undefined;\n\n  // the coords of the layer\n  const latlngs = getCoords(layer);\n\n  if (isMarker) {\n    const [lng, lat] = latlngs;\n    // return the info for the marker, no more calculations needed\n    return {\n      latlng: { lng, lat },\n      distance: distance(latlngs, P),\n    };\n  }\n\n  if (isMultiPoint) {\n    const np = nearestPointInPointSet(\n      P,\n      featureCollection(latlngs.map((x) => turfPoint(x)))\n    );\n    const c = np.geometry.coordinates;\n    return {\n      latlng: { lng: c[0], lat: c[1] },\n      distance: np.properties.distanceToPoint,\n    };\n  }\n\n  if (isPolygon || isMultiPolygon) {\n    lines = polygonToLine(layer);\n  } else {\n    lines = layer;\n  }\n\n  let nearestPoint;\n  if (isPolygon) {\n    let lineStrings;\n    if (lines.geometry.type === \"LineString\") {\n      lineStrings = [turfLineString(lines.geometry.coordinates)];\n    } else {\n      lineStrings = lines.geometry.coordinates.map((coords) =>\n        turfLineString(coords)\n      );\n    }\n\n    const closestFeature = getFeatureWithNearestPoint(lineStrings, P);\n    lines = closestFeature.feature;\n    nearestPoint = closestFeature.point;\n  } else if (isMultiPolygon) {\n    const lineStrings = lines.features\n      .map((feat) => {\n        if (feat.geometry.type === \"LineString\") {\n          return [feat.geometry.coordinates];\n        } else {\n          return feat.geometry.coordinates;\n        }\n      })\n      .flatMap((coords) => coords)\n      .map((coords) => turfLineString(coords));\n\n    const closestFeature = getFeatureWithNearestPoint(lineStrings, P);\n    lines = closestFeature.feature;\n    nearestPoint = closestFeature.point;\n  } else {\n    nearestPoint = nearestPointOnLine(lines, P);\n  }\n\n  const [lng, lat] = nearestPoint.geometry.coordinates;\n\n  let segmentIndex = nearestPoint.properties.index;\n\n  let { coordinates } = lines.geometry;\n\n  if (lines.geometry.type === \"MultiLineString\") {\n    coordinates =\n      lines.geometry.coordinates[nearestPoint.properties.multiFeatureIndex];\n  }\n\n  if (segmentIndex + 1 === coordinates.length) segmentIndex--;\n\n  return {\n    latlng: { lng, lat },\n    segment: coordinates.slice(segmentIndex, segmentIndex + 2),\n    distance: nearestPoint.properties.dist,\n    isMarker,\n  };\n};\n\nfunction getFeatureWithNearestPoint(lineStrings, P) {\n  const nearestPointsOfEachFeature = lineStrings.map((feat) => ({\n    feature: feat,\n    point: nearestPointOnLine(feat, P),\n  }));\n\n  nearestPointsOfEachFeature.sort(\n    (a, b) => a.point.properties.dist - b.point.properties.dist\n  );\n\n  return {\n    feature: nearestPointsOfEachFeature[0].feature,\n    point: nearestPointsOfEachFeature[0].point,\n  };\n}\n\nconst calcClosestLayer = (lngLat, layers) => {\n  let closestLayer = {};\n\n  // loop through the layers\n  layers.forEach((layer, index) => {\n    // find the closest latlng, segment and the distance of this layer to the dragged marker latlng\n    const results = calcLayerDistances(lngLat, layer);\n\n    // save the info if it doesn't exist or if the distance is smaller than the previous one\n    if (\n      closestLayer.distance === undefined ||\n      results.distance < closestLayer.distance\n    ) {\n      closestLayer = results;\n      closestLayer.layer = layer;\n    }\n  });\n\n  // return the closest layer and it's data\n  // if there is no closest layer, return undefined\n  return closestLayer;\n};\n\n// minimal distance before marker snaps (in pixels)\nconst metersPerPixel = function (latitude, zoomLevel) {\n  const earthCircumference = 40075017;\n  const latitudeRadians = latitude * (Math.PI / 180);\n  return (\n    (earthCircumference * Math.cos(latitudeRadians)) /\n    Math.pow(2, zoomLevel + 8)\n  );\n};\n\n// we got the point we want to snap to (C), but we need to check if a coord of the polygon\nfunction snapToLineOrPolygon(\n  closestLayer,\n  snapOptions,\n  snapVertexPriorityDistance\n) {\n  // A and B are the points of the closest segment to P (the marker position we want to snap)\n  const A = closestLayer.segment[0];\n  const B = closestLayer.segment[1];\n\n  // C is the point we would snap to on the segment.\n  // The closest point on the closest segment of the closest polygon to P. That's right.\n  const C = [closestLayer.latlng.lng, closestLayer.latlng.lat];\n\n  // distances from A to C and B to C to check which one is closer to C\n  const distanceAC = distance(A, C);\n  const distanceBC = distance(B, C);\n\n  // closest latlng of A and B to C\n  let closestVertexLatLng = distanceAC < distanceBC ? A : B;\n\n  // distance between closestVertexLatLng and C\n  let shortestDistance = distanceAC < distanceBC ? distanceAC : distanceBC;\n\n  // snap to middle (M) of segment if option is enabled\n  if (snapOptions && snapOptions.snapToMidPoints) {\n    const M = midpoint(A, B).geometry.coordinates;\n    const distanceMC = distance(M, C);\n\n    if (distanceMC < distanceAC && distanceMC < distanceBC) {\n      // M is the nearest vertex\n      closestVertexLatLng = M;\n      shortestDistance = distanceMC;\n    }\n  }\n\n  // the distance that needs to be undercut to trigger priority\n  const priorityDistance = snapVertexPriorityDistance;\n\n  // the latlng we ultimately want to snap to\n  let snapLatlng;\n\n  // if C is closer to the closestVertexLatLng (A, B or M) than the snapDistance,\n  // the closestVertexLatLng has priority over C as the snapping point.\n  if (shortestDistance < priorityDistance) {\n    snapLatlng = closestVertexLatLng;\n  } else {\n    snapLatlng = C;\n  }\n\n  // return the copy of snapping point\n  const [lng, lat] = snapLatlng;\n  return { lng, lat };\n}\n\nfunction snapToPoint(closestLayer) {\n  return closestLayer.latlng;\n}\n\nconst checkPrioritySnapping = (\n  closestLayer,\n  snapOptions,\n  snapVertexPriorityDistance = 1.25\n) => {\n  let snappingToPoint = !Array.isArray(closestLayer.segment);\n  if (snappingToPoint) {\n    return snapToPoint(closestLayer);\n  } else {\n    return snapToLineOrPolygon(\n      closestLayer,\n      snapOptions,\n      snapVertexPriorityDistance\n    );\n  }\n};\n\n/**\n * Returns snap points if there are any, otherwise the original lng/lat of the event\n * Also, defines if vertices should show on the state object\n *\n * Mutates the state object\n *\n * @param state\n * @param e\n * @returns {{lng: number, lat: number}}\n */\nexport const snap = (state, e) => {\n  let lng = e.lngLat.lng;\n  let lat = e.lngLat.lat;\n\n  // Holding alt bypasses all snapping\n  if (e.originalEvent.altKey) {\n    state.showVerticalSnapLine = false;\n    state.showHorizontalSnapLine = false;\n\n    return { lng, lat };\n  }\n\n  if (state.snapList.length <= 0) {\n    return { lng, lat };\n  }\n\n  // snapping is on\n  let closestLayer, minDistance, snapLatLng;\n  if (state.options.snap) {\n    closestLayer = calcClosestLayer({ lng, lat }, state.snapList);\n\n    // if no layers found. Can happen when circle is the only visible layer on the map and the hidden snapping-border circle layer is also on the map\n    if (Object.keys(closestLayer).length === 0) {\n      return false;\n    }\n\n    const isMarker = closestLayer.isMarker;\n    const snapVertexPriorityDistance = state.options.snapOptions\n      ? state.options.snapOptions.snapVertexPriorityDistance\n      : undefined;\n\n    if (!isMarker) {\n      snapLatLng = checkPrioritySnapping(\n        closestLayer,\n        state.options.snapOptions,\n        snapVertexPriorityDistance\n      );\n      // snapLatLng = closestLayer.latlng;\n    } else {\n      snapLatLng = closestLayer.latlng;\n    }\n\n    minDistance =\n      ((state.options.snapOptions && state.options.snapOptions.snapPx) || 15) *\n      metersPerPixel(snapLatLng.lat, state.map.getZoom());\n  }\n\n  let verticalPx, horizontalPx;\n  if (state.options.guides) {\n    const nearestGuideline = getNearbyVertices(state.vertices, e.lngLat);\n\n    verticalPx = nearestGuideline.verticalPx;\n    horizontalPx = nearestGuideline.horizontalPx;\n\n    if (verticalPx) {\n      // Draw a line from top to bottom\n\n      const lngLatTop = { lng: verticalPx, lat: e.lngLat.lat + 10 };\n      const lngLatBottom = { lng: verticalPx, lat: e.lngLat.lat - 10 };\n\n      state.verticalGuide.updateCoordinate(0, lngLatTop.lng, lngLatTop.lat);\n      state.verticalGuide.updateCoordinate(\n        1,\n        lngLatBottom.lng,\n        lngLatBottom.lat\n      );\n    }\n\n    if (horizontalPx) {\n      // Draw a line from left to right\n\n      const lngLatTop = { lng: e.lngLat.lng + 10, lat: horizontalPx };\n      const lngLatBottom = { lng: e.lngLat.lng - 10, lat: horizontalPx };\n\n      state.horizontalGuide.updateCoordinate(0, lngLatTop.lng, lngLatTop.lat);\n      state.horizontalGuide.updateCoordinate(\n        1,\n        lngLatBottom.lng,\n        lngLatBottom.lat\n      );\n    }\n\n    state.showVerticalSnapLine = !!verticalPx;\n    state.showHorizontalSnapLine = !!horizontalPx;\n  }\n\n  if (closestLayer && closestLayer.distance * 1000 < minDistance) {\n    return snapLatLng;\n  } else if (verticalPx || horizontalPx) {\n    if (verticalPx) {\n      lng = verticalPx;\n    }\n    if (horizontalPx) {\n      lat = horizontalPx;\n    }\n    return { lng, lat };\n  } else {\n    return { lng, lat };\n  }\n};\n\nexport const getGuideFeature = (id) => ({\n  id,\n  type: geojsonTypes.FEATURE,\n  properties: {\n    isSnapGuide: \"true\", // for styling\n  },\n  geometry: {\n    type: geojsonTypes.LINE_STRING,\n    coordinates: [],\n  },\n});\n\nexport const shouldHideGuide = (state, geojson) => {\n  if (\n    geojson.properties.id === IDS.VERTICAL_GUIDE &&\n    (!state.options.guides || !state.showVerticalSnapLine)\n  ) {\n    return true;\n  }\n\n  if (\n    geojson.properties.id === IDS.HORIZONTAL_GUIDE &&\n    (!state.options.guides || !state.showHorizontalSnapLine)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n","import { polygon } from \"@turf/helpers\";\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nexport default function bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return polygon([[lowLeft, lowRight, topRight, topLeft, lowLeft]], options.properties, { bbox: bbox, id: options.id });\n}\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport {\n  createSnapList,\n  getGuideFeature,\n  IDS,\n  shouldHideGuide,\n  snap,\n} from \"./../utils/index.js\";\n\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst { geojsonTypes, cursors } = MapboxDraw.constants;\nconst DrawPoint = MapboxDraw.modes.draw_point;\nconst SnapPointMode = { ...DrawPoint };\n\nSnapPointMode.onSetup = function (options) {\n  const point = this.newFeature({\n    type: geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: geojsonTypes.POINT,\n      coordinates: [], //这里修改为与DrawPoint.onSetup中相同的值，DrawPoint.onStop中会根据coordinates.length判断是否删除该要素\n    },\n  });\n\n  const verticalGuide = this.newFeature(getGuideFeature(IDS.VERTICAL_GUIDE));\n  const horizontalGuide = this.newFeature(\n    getGuideFeature(IDS.HORIZONTAL_GUIDE)\n  );\n\n  this.addFeature(point);\n  this.addFeature(verticalGuide);\n  this.addFeature(horizontalGuide);\n\n  const selectedFeatures = this.getSelected();\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n\n  const [snapList, vertices] = createSnapList(\n    this.map,\n    this._ctx.api,\n    point,\n    this._ctx.options.snapOptions?.snapGetFeatures\n  );\n\n  const state = {\n    map: this.map,\n    point,\n    vertices,\n    snapList,\n    selectedFeatures,\n    verticalGuide,\n    horizontalGuide,\n  };\n\n  state.options = this._ctx.options;\n\n  const moveendCallback = () => {\n    const [snapList, vertices] = createSnapList(\n      this.map,\n      this._ctx.api,\n      point,\n      this._ctx.options.snapOptions?.snapGetFeatures\n    );\n    state.vertices = vertices;\n    state.snapList = snapList;\n  };\n  // for removing listener later on close\n  state[\"moveendCallback\"] = moveendCallback;\n\n  const optionsChangedCallback = (options) => {\n    state.options = options;\n  };\n  // for removing listener later on close\n  state[\"optionsChangedCallback\"] = optionsChangedCallback;\n\n  this.map.on(\"moveend\", moveendCallback);\n  this.map.on(\"draw.snap.options_changed\", optionsChangedCallback);\n\n  console.log('snappedLng snappedLat onSetup',state.snappedLng, state.snappedLat)\n  return state;\n};\n\n// [bug] 解决MS中的连续绘制，很快速的点击地图进行绘制时报错的问题（仅enhance包会有此问题）：Uncaught TypeError: Cannot read properties of undefined (reading 'data')\nSnapPointMode.onClick = function (state, e) {\n  // We mock out e with the rounded lng/lat then call DrawPoint with it\n  console.log('snappedLng snappedLat onClick',state.snappedLng, state.snappedLat)\n  DrawPoint.onClick.call(this, state, {\n    lngLat: {\n      lng: state.snappedLng ?? e.lngLat.lng,\n      lat: state.snappedLat ?? e.lngLat.lat,\n    },\n  });\n};\n\nSnapPointMode.onMouseMove = function (state, e) {\n  const { lng, lat } = snap(state, e);\n  console.log('snappedLng snappedLat onMouseMove',lng, lat)\n\n  state.snappedLng = lng;\n  state.snappedLat = lat;\n\n  if (\n    state.lastVertex &&\n    state.lastVertex[0] === lng &&\n    state.lastVertex[1] === lat\n  ) {\n    this.updateUIClasses({ mouse: cursors.POINTER });\n\n    // cursor options:\n    // ADD: \"add\"\n    // DRAG: \"drag\"\n    // MOVE: \"move\"\n    // NONE: \"none\"\n    // POINTER: \"pointer\"\n  } else {\n    this.updateUIClasses({ mouse: cursors.ADD });\n  }\n};\n\n// This is 'extending' DrawPoint.toDisplayFeatures\nSnapPointMode.toDisplayFeatures = function (state, geojson, display) {\n  if (shouldHideGuide(state, geojson)) return;\n\n  // This relies on the the state of SnapPointMode having a 'point' prop\n  DrawPoint.toDisplayFeatures(state, geojson, display);\n};\n\n// This is 'extending' DrawPoint.onStop\nSnapPointMode.onStop = function (state) {\n  this.deleteFeature(IDS.VERTICAL_GUIDE, { silent: true });\n  this.deleteFeature(IDS.HORIZONTAL_GUIDE, { silent: true });\n\n  // remove moveend callback\n  this.map.off(\"moveend\", state.moveendCallback);\n\n  // This relies on the the state of SnapPointMode having a 'point' prop\n  DrawPoint.onStop.call(this, state);\n};\n\nexport default SnapPointMode;\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport {\n  addPointToVertices,\n  createSnapList,\n  getGuideFeature,\n  IDS,\n  shouldHideGuide,\n  snap,\n} from \"./../utils/index.js\";\n\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst { geojsonTypes, modes, cursors } = MapboxDraw.constants;\nconst DrawLine = MapboxDraw.modes.draw_line_string;\nconst SnapLineMode = { ...DrawLine };\n\nSnapLineMode.onSetup = function (options) {\n  const line = this.newFeature({\n    type: geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: geojsonTypes.LINE_STRING,\n      coordinates: [[]],\n    },\n  });\n\n  const verticalGuide = this.newFeature(getGuideFeature(IDS.VERTICAL_GUIDE));\n  const horizontalGuide = this.newFeature(\n    getGuideFeature(IDS.HORIZONTAL_GUIDE)\n  );\n\n  this.addFeature(line);\n  this.addFeature(verticalGuide);\n  this.addFeature(horizontalGuide);\n\n  const selectedFeatures = this.getSelected();\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n\n  const [snapList, vertices] = createSnapList(\n    this.map,\n    this._ctx.api,\n    line,\n    this._ctx.options.snapOptions?.snapGetFeatures\n  );\n\n  const state = {\n    map: this.map,\n    line,\n    currentVertexPosition: 0,\n    vertices,\n    snapList,\n    selectedFeatures,\n    verticalGuide,\n    horizontalGuide,\n    direction: \"forward\", // expected by DrawLineString\n  };\n\n  state.options = this._ctx.options;\n\n  const moveendCallback = () => {\n    const [snapList, vertices] = createSnapList(\n      this.map,\n      this._ctx.api,\n      line,\n      this._ctx.options.snapOptions?.snapGetFeatures\n    );\n    state.vertices = vertices;\n    state.snapList = snapList;\n  };\n  // for removing listener later on close\n  state[\"moveendCallback\"] = moveendCallback;\n\n  const optionsChangedCallback = (options) => {\n    state.options = options;\n  };\n  // for removing listener later on close\n  state[\"optionsChangedCallback\"] = optionsChangedCallback;\n\n  this.map.on(\"moveend\", moveendCallback);\n  this.map.on(\"draw.snap.options_changed\", optionsChangedCallback);\n\n  return state;\n};\n\nSnapLineMode.onClick = function (state) {\n  // We save some processing by rounding on click, not mousemove\n  const lng = state.snappedLng;\n  const lat = state.snappedLat;\n\n  // End the drawing if this click is on the previous position\n  // Note: not bothering with 'direction'\n  if (state.currentVertexPosition > 0) {\n    const lastVertex = state.line.coordinates[state.currentVertexPosition - 1];\n\n    state.lastVertex = lastVertex;\n\n    if (lastVertex[0] === lng && lastVertex[1] === lat) {\n      return this.changeMode(modes.SIMPLE_SELECT, {\n        featureIds: [state.line.id],\n      });\n    }\n  }\n\n  // const point = state.map.project({ lng: lng, lat: lat });\n\n  addPointToVertices(state.map, state.vertices, { lng, lat });\n\n  state.line.updateCoordinate(state.currentVertexPosition, lng, lat);\n\n  state.currentVertexPosition++;\n\n  state.line.updateCoordinate(state.currentVertexPosition, lng, lat);\n};\n\nSnapLineMode.onMouseMove = function (state, e) {\n  const { lng, lat } = snap(state, e);\n\n  state.line.updateCoordinate(state.currentVertexPosition, lng, lat);\n  state.snappedLng = lng;\n  state.snappedLat = lat;\n\n  if (\n    state.lastVertex &&\n    state.lastVertex[0] === lng &&\n    state.lastVertex[1] === lat\n  ) {\n    this.updateUIClasses({ mouse: cursors.POINTER });\n\n    // cursor options:\n    // ADD: \"add\"\n    // DRAG: \"drag\"\n    // MOVE: \"move\"\n    // NONE: \"none\"\n    // POINTER: \"pointer\"\n  } else {\n    this.updateUIClasses({ mouse: cursors.ADD });\n  }\n};\n\n// This is 'extending' DrawLine.toDisplayFeatures\nSnapLineMode.toDisplayFeatures = function (state, geojson, display) {\n  if (shouldHideGuide(state, geojson)) return;\n\n  // This relies on the the state of SnapLineMode being similar to DrawLine\n  DrawLine.toDisplayFeatures(state, geojson, display);\n};\n\n// This is 'extending' DrawLine.onStop\nSnapLineMode.onStop = function (state) {\n  this.deleteFeature(IDS.VERTICAL_GUIDE, { silent: true });\n  this.deleteFeature(IDS.HORIZONTAL_GUIDE, { silent: true });\n\n  // remove moveend callback\n  this.map.off(\"moveend\", state.moveendCallback);\n\n  // This relies on the the state of SnapLineMode being similar to DrawLine\n  DrawLine.onStop.call(this, state);\n};\n\nexport default SnapLineMode;\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport {\n  addPointToVertices,\n  createSnapList,\n  getGuideFeature,\n  IDS,\n  shouldHideGuide,\n  snap,\n} from \"./../utils/index.js\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\n\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst { geojsonTypes, modes, cursors } = MapboxDraw.constants;\nconst DrawPolygon = MapboxDraw.modes.draw_polygon;\nconst SnapPolygonMode = { ...DrawPolygon };\n\nSnapPolygonMode.onSetup = function (options) {\n  const polygon = this.newFeature({\n    type: geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: geojsonTypes.POLYGON,\n      coordinates: [[]],\n    },\n  });\n\n  const verticalGuide = this.newFeature(getGuideFeature(IDS.VERTICAL_GUIDE));\n  const horizontalGuide = this.newFeature(\n    getGuideFeature(IDS.HORIZONTAL_GUIDE)\n  );\n\n  this.addFeature(polygon);\n  this.addFeature(verticalGuide);\n  this.addFeature(horizontalGuide);\n\n  const selectedFeatures = this.getSelected();\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n\n  const [snapList, vertices] = createSnapList(\n    this.map,\n    this._ctx.api,\n    polygon,\n    this._ctx.options.snapOptions?.snapGetFeatures\n  );\n\n  const state = {\n    map: this.map,\n    polygon,\n    currentVertexPosition: 0,\n    vertices,\n    snapList,\n    selectedFeatures,\n    verticalGuide,\n    horizontalGuide,\n  };\n\n  /// Adding default options\n  state.options = Object.assign(this._ctx.options, {\n    overlap: true,\n  });\n\n  const moveendCallback = () => {\n    const [snapList, vertices] = createSnapList(\n      this.map,\n      this._ctx.api,\n      polygon,\n      this._ctx.options.snapOptions?.snapGetFeatures\n    );\n    state.vertices = vertices;\n    state.snapList = snapList;\n  };\n  // for removing listener later on close\n  state[\"moveendCallback\"] = moveendCallback;\n\n  const optionsChangedCallback = (options) => {\n    state.options = options;\n  };\n\n  // for removing listener later on close\n  state[\"optionsChangedCallback\"] = optionsChangedCallback;\n\n  this.map.on(\"moveend\", moveendCallback);\n  this.map.on(\"draw.snap.options_changed\", optionsChangedCallback);\n\n  return state;\n};\n\nSnapPolygonMode.onClick = function (state) {\n  // We save some processing by rounding on click, not mousemove\n  const lng = state.snappedLng;\n  const lat = state.snappedLat;\n\n  // End the drawing if this click is on the previous position\n  if (state.currentVertexPosition > 0) {\n    const lastVertex =\n      state.polygon.coordinates[0][state.currentVertexPosition - 1];\n\n    state.lastVertex = lastVertex;\n\n    if (lastVertex[0] === lng && lastVertex[1] === lat) {\n      return this.changeMode(modes.SIMPLE_SELECT, {\n        featureIds: [state.polygon.id],\n      });\n    }\n  }\n\n  // const point = state.map.project();\n\n  addPointToVertices(state.map, state.vertices, { lng, lat });\n\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, lng, lat);\n\n  state.currentVertexPosition++;\n\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, lng, lat);\n};\n\nSnapPolygonMode.onMouseMove = function (state, e) {\n  const { lng, lat } = snap(state, e);\n\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, lng, lat);\n  state.snappedLng = lng;\n  state.snappedLat = lat;\n\n  if (\n    state.lastVertex &&\n    state.lastVertex[0] === lng &&\n    state.lastVertex[1] === lat\n  ) {\n    this.updateUIClasses({ mouse: cursors.POINTER });\n\n    // cursor options:\n    // ADD: \"add\"\n    // DRAG: \"drag\"\n    // MOVE: \"move\"\n    // NONE: \"none\"\n    // POINTER: \"pointer\"\n  } else {\n    this.updateUIClasses({ mouse: cursors.ADD });\n  }\n};\n\n// This is 'extending' DrawPolygon.toDisplayFeatures\nSnapPolygonMode.toDisplayFeatures = function (state, geojson, display) {\n  if (shouldHideGuide(state, geojson)) return;\n\n  // This relies on the the state of SnapPolygonMode being similar to DrawPolygon\n  DrawPolygon.toDisplayFeatures(state, geojson, display);\n};\n\n// This is 'extending' DrawPolygon.onStop\nSnapPolygonMode.onStop = function (state) {\n  this.deleteFeature(IDS.VERTICAL_GUIDE, { silent: true });\n  this.deleteFeature(IDS.HORIZONTAL_GUIDE, { silent: true });\n\n  // remove moveend callback\n  this.map.off(\"moveend\", state.moveendCallback);\n  this.map.off(\"draw.snap.options_changed\", state.optionsChangedCallback);\n\n  var userPolygon = state.polygon;\n  if (state.options.overlap) {\n    DrawPolygon.onStop.call(this, state);\n    return;\n  }\n  // if overlap is false, mutate polygon so it doesn't overlap with existing ones\n  // get all editable features to check for intersections\n  var features = this._ctx.store.getAll();\n\n  try {\n    var edited = userPolygon;\n    features.forEach(function (feature) {\n      if (userPolygon.id === feature.id) return false;\n      if (!booleanIntersects(feature, edited)) return;\n      edited = turf.difference(edited, feature);\n    });\n    state.polygon.coordinates =\n      edited.coordinates || edited.geometry.coordinates;\n  } catch (err) {\n    // cancel this polygon if a difference cannot be calculated\n    DrawPolygon.onStop.call(this, state);\n    this.deleteFeature([state.polygon.id], { silent: true });\n    return;\n  }\n\n  // monkeypatch so DrawPolygon.onStop doesn't error\n  var rc = state.polygon.removeCoordinate;\n  state.polygon.removeCoordinate = () => {};\n  // This relies on the the state of SnapPolygonMode being similar to DrawPolygon\n  DrawPolygon.onStop.call(this, state);\n  state.polygon.removeCoordinate = rc.bind(state.polygon);\n};\n\nexport default SnapPolygonMode;\n","import booleanDisjoint from \"@turf/boolean-disjoint\";\nimport { flattenEach } from \"@turf/meta\";\n/**\n * Boolean-intersects returns (TRUE) two geometries intersect.\n *\n * @name booleanIntersects\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanIntersects(line, point);\n * //=true\n */\nexport default function booleanIntersects(feature1, feature2) {\n    var bool = false;\n    flattenEach(feature1, function (flatten1) {\n        flattenEach(feature2, function (flatten2) {\n            if (bool === true) {\n                return true;\n            }\n            bool = !booleanDisjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport {\n  createSnapList,\n  getGuideFeature,\n  IDS,\n  snap,\n} from \"./../utils/index.js\";\n\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst Constants = MapboxDraw.constants;\nconst DirectSelect = MapboxDraw.modes.direct_select;\nconst SnapDirectSelect = { ...DirectSelect };\n\nSnapDirectSelect.onSetup = function (opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n\n  if (!feature) {\n    throw new Error(\"You must provide a featureId to enter direct_select mode\");\n  }\n\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError(\"direct_select mode doesn't handle point features\");\n  }\n\n  const [snapList, vertices] = createSnapList(\n    this.map,\n    this._ctx.api,\n    feature,\n    this._ctx.options.snapOptions?.snapGetFeatures\n  );\n\n  const verticalGuide = this.newFeature(getGuideFeature(IDS.VERTICAL_GUIDE));\n  const horizontalGuide = this.newFeature(\n    getGuideFeature(IDS.HORIZONTAL_GUIDE)\n  );\n\n  this.addFeature(verticalGuide);\n  this.addFeature(horizontalGuide);\n\n  const state = {\n    map: this.map,\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : [],\n    vertices,\n    snapList,\n    verticalGuide,\n    horizontalGuide,\n  };\n\n  state.options = this._ctx.options;\n\n  this.setSelectedCoordinates(\n    this.pathsToCoordinates(featureId, state.selectedCoordPaths)\n  );\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n\n  this.setActionableState({\n    trash: true,\n  });\n\n  const optionsChangedCallback = (options) => {\n    state.options = options;\n  };\n\n  // for removing listener later on close\n  state[\"optionsChangedCallback\"] = optionsChangedCallback;\n  this.map.on(\"draw.snap.options_changed\", optionsChangedCallback);\n\n  return state;\n};\n\nSnapDirectSelect.dragVertex = function (state, e, delta) {\n  const { lng, lat } = snap(state, e);\n\n  state.feature.updateCoordinate(state.selectedCoordPaths[0], lng, lat);\n};\n\nSnapDirectSelect.onStop = function (state) {\n  this.deleteFeature(IDS.VERTICAL_GUIDE, { silent: true });\n  this.deleteFeature(IDS.HORIZONTAL_GUIDE, { silent: true });\n\n  // remove moveend callback\n  //   this.map.off(\"moveend\", state.moveendCallback);\n  this.map.off(\"draw.snap.options_changed\", state.optionsChangedCallback);\n\n  // This relies on the the state of SnapPolygonMode being similar to DrawPolygon\n  DirectSelect.onStop.call(this, state);\n};\n\nexport default SnapDirectSelect;\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nconst theme = MapboxDraw.lib.theme;\n\nconst modifiedDefaultStyles = theme.map(defaultStyle => {\n  if (defaultStyle.id === 'gl-draw-line-inactive') {\n    return {\n      ...defaultStyle,\n      filter: [\n        ...defaultStyle.filter,\n        ['!=', 'user_isSnapGuide', 'true'],\n      ],\n    };\n  }\n\n  return defaultStyle;\n});\n\nconst customDrawStyles = [\n  ...modifiedDefaultStyles,\n  {\n    id: \"guide\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"LineString\"],\n      [\"==\", \"user_isSnapGuide\", \"true\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#c00c00\",\n      \"line-width\": 1,\n      \"line-dasharray\": [5, 5],\n    },\n  },\n];\n\nexport default customDrawStyles;\n"],"names":["module","exports","t","e","n","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","o","on","Error","push","selector","fn","render","store","featureChanged","r","i","a","length","s","call","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures","__esModule","Object","prototype","hasOwnProperty","default","this","apply","arguments","Function","bind","defineProperty","value","keys","forEach","getOwnPropertyDescriptor","get","enumerable","RADIUS","FLATTENING","POLAR_RADIUS","Math","abs","c","l","u","sin","PI","geometry","type","coordinates","geometries","ring","CONTROL_BASE","CONTROL_PREFIX","CONTROL_BUTTON","CONTROL_BUTTON_LINE","CONTROL_BUTTON_POLYGON","CONTROL_BUTTON_POINT","CONTROL_BUTTON_TRASH","CONTROL_BUTTON_COMBINE_FEATURES","CONTROL_BUTTON_UNCOMBINE_FEATURES","CONTROL_GROUP","ATTRIBUTION","ACTIVE_BUTTON","BOX_SELECT","HOT","COLD","d","ADD","MOVE","DRAG","POINTER","NONE","p","POLYGON","LINE","POINT","f","FEATURE","LINE_STRING","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","h","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","STATIC","g","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","y","CHANGE_COORDINATES","v","MIDPOINT","VERTEX","m","ACTIVE","INACTIVE","_","b","E","freeze","__proto__","classes","sources","cursors","types","geojsonTypes","modes","events","updateActions","meta","activeStates","interactions","LAT_MIN","LAT_RENDERED_MIN","LAT_MAX","LAT_RENDERED_MAX","LNG_MIN","LNG_MAX","T","Point","LineString","MultiLineString","Polygon","C","area","O","map","property","sort","S","point","x","I","_items","_nums","_length","add","has","delete","values","k","JSON","parse","clear","M","L","options","clickBuffer","touch","touchBuffer","styles","layers","id","queryRenderedFeatures","filter","indexOf","properties","N","mouse","active","feature","currentModeName","queueMapClasses","A","sqrt","P","fineTolerance","grossTolerance","interval","time","F","tolerance","w","R","log","pow","floor","random","toString","parseInt","rack","hats","set","bits","base","D","ctx","changed","incomingCoords","setCoordinates","getCoordinates","stringify","setProperty","toGeoJSON","internal","mode","userProperties","U","create","isValid","updateCoordinate","getCoordinate","j","addCoordinate","splice","removeCoordinate","V","slice","every","split","concat","B","MultiPoint","MultiPolygon","G","join","J","model","TypeError","features","_coordinatesToFeatures","z","drawConfig","_ctx","replace","getFeatures","setSelected","setSelectedCoordinates","reduce","feature_id","getSelected","getSelectedIds","isSelected","getFeature","select","deselect","deleteFeature","addFeature","clearSelectedFeatures","clearSelected","clearSelectedCoordinates","setActionableState","actionable","changeMode","updateUIClasses","activateUIButton","setActiveButton","featuresAt","newFeature","isInstanceOf","doRender","onSetup","onDrag","onClick","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onKeyUp","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onTap","onStop","onTrash","onCombineFeature","onUncombineFeature","toDisplayFeatures","Y","$","q","onCombineFeatures","onUncombineFeatures","H","X","getSource","isDirty","getAllIds","getChangedIds","hot","cold","parent","currentModeRender","setData","_emitSelectionChange","fire","points","getSelectedCoordinates","_deletedFeaturesToEmit","clearChangedIds","Z","_features","_featureIds","_selectedFeatureIds","_selectedCoordinates","_changedFeatureIds","_mapInitialConfig","requestAnimationFrame","W","silent","createRenderBatch","setDirty","getAll","coord_path","setFeatureProperty","storeMapConfig","isEnabled","restoreMapConfig","enable","disable","getInitialConfigValue","K","Q","tt","et","nt","onRemove","off","connect","clearInterval","removeLayers","removeButtons","removeEventListeners","clearMapClasses","boxZoomInitial","boxZoom","container","parentNode","removeChild","addLayers","addEventListeners","onAdd","Date","getTime","originalEvent","stopPropagation","mousedrag","touchdrag","buttons","which","featureTarget","preventDefault","touchEnabled","srcElement","target","classList","contains","keyCode","controls","line_string","polygon","zoomend","changeZoom","data","dataType","setup","some","getLayer","defaultMode","actions","addEventListener","keybindings","removeEventListener","getMode","remove","document","createElement","className","setAttribute","title","appendChild","onDeactivate","onActivate","addButtons","combine_features","uncombine_features","getContainer","boxSelect","dragPan","loaded","setInterval","addSource","addLayer","removeLayer","removeSource","ot","paint","layout","rt","it","shiftKey","button","at","st","ut","ct","lt","dt","pt","ft","ht","isOfMetaType","isShiftMousedown","isActiveFeature","isInactiveFeature","noTarget","isFeature","isVertex","isShiftDown","isEscapeKey","isEnterKey","isTrue","gt","yt","clone","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","round","_round","mag","equals","dist","distSqr","angle","atan2","angleTo","angleWith","angleWithSep","cos","convert","Array","isArray","vt","mt","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","_t","bt","lng","lat","Et","String","midpoints","selectedPaths","Tt","setTimeout","doubleClickZoom","Ct","Ot","St","GeometryCollection","Feature","FeatureCollection","It","xt","Mt","Lt","Nt","At","Pt","Ft","wt","Rt","node","node_","path","parents","key","isRoot","level","circular","update","Ut","before","after","pre","post","block","Dt","isLeaf","notLeaf","notRoot","jt","Vt","isLast","isFirst","pop","kt","RegExp","message","Boolean","Number","getPrototypeOf","constructor","paths","nodes","Bt","Gt","Jt","_bbox","_valid","include","min","max","bbox","center","union","_fastContains","intersect","zt","Yt","$t","qt","Ht","Xt","bboxify","Zt","Wt","Kt","ceil","Qt","te","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initiallySelectedFeatureIds","featureIds","fireActionable","fireUpdate","action","getUniqueIds","stopExtendedInteractions","clickAnywhere","clickOnVertex","clickOnFeature","featureId","coordPath","startPos","lngLat","startOnActiveFeature","startBoxSelect","dragMove","whileBoxSelect","style","transform","WebkitTransform","width","height","includes","createdFeatures","deletedFeatures","ee","ne","oe","selectedCoordPaths","startDragging","stopDragging","onVertex","pathsToCoordinates","onMidpoint","onFeature","dragFeature","dragVertex","clickNoTarget","clickInactive","clickActiveFeature","localeCompare","numeric","re","ie","stopDrawingAndRemove","ae","currentVertexPosition","se","from","line","direction","ue","simple_select","direct_select","draw_point","draw_polygon","draw_line_string","ce","displayControlsDefault","le","de","pe","source","fe","self","nodeType","process","binding","isTypedArray","size","exec","IE_PROTO","Buffer","Symbol","Uint8Array","propertyIsEnumerable","toStringTag","getOwnPropertySymbols","isBuffer","valueOf","__data__","byteLength","byteOffset","buffer","name","test","hash","string","ArrayBuffer","resolve","he","ge","ye","ve","CommonSelectors","constrainFeatureMovement","createMidPoint","createSupplementaryPoints","createVertex","euclideanDistance","getFeatureAtAndSetCursors","isClick","isEventAtCoordinates","isTap","mapEventToBoundingBox","ModeHandler","moveFeatures","sortFeatures","stringSetsAreEqual","StringSet","theme","toDenseArray","me","getFeatureIdsAt","getSelectedPoints","deleteAll","api","_e","constants","lib","meta_1","geojson","result","Infinity","coordEach","coord","geom","feat","isNumber","_i","coordinates_1","lineString","featureCollection","fc","multiLineString","multiPoint","multiPolygon","radiansToLength","radians","units","factor","factors","lengthToRadians","distance","radiansToDegrees","num","isNaN","earthRadius","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","yards","unitsFactors","areaFactors","acres","hectares","_options","coords","polygons","lineStrings","geometryCollection","precision","multiplier","lengthToDegrees","bearingToAzimuth","bearing","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","startFactor","finalFactor","isObject","input","validateBBox","validateId","helpers","callback","excludeWrapCoord","stopG","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","propEach","featureEach","geomEach","featureProperties","featureBBox","undefined","flattenEach","segmentEach","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","currentCoord","featureIndexCoord","multiPartIndexCoord","currentSegment","lineEach","coordAll","coordReduce","initialValue","previousValue","featureReduce","currentFeature","findPoint","findSegment","flattenReduce","geomReduce","currentGeometry","lineReduce","currentLine","propReduce","currentProperties","segmentReduce","started","rbush","turfBBox","geojsonRbush","maxEntries","tree","insert","load","search","toBBox","collides","all","toJSON","fromJSON","json","minX","minY","maxX","maxY","exp","_maxEntries","_minEntries","children","leaf","_all","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","_allDistMargin","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","globalThis","window","obj","prop","getCoord","getCoords","getGeom","booleanPointInPolygon","polys","inBBox","insidePoly","inRing","ignoreBoundary","inHole","isInside","xi","yi","xj","yj","coordinate","results","segments","currentCoords","coords1","coords2","x1","y1","x2","y2","segment","createSegments","lineSegmentFeature","intersects","line1","line2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","unique","match","poly","coordsToLine","polygonToLine","multiPoly","lines","multiPolygonToLine","isPointOnLine","isPointOnLineSegment","isLineInPoly","_a","lineSegmentStart","lineSegmentEnd","dxc","dyc","dxl","dyl","feature1","feature2","bool","flatten1","flatten2","geom1","geom2","pair1","pair2","lineString1","lineString2","isLineOnLine","_b","_c","doLinesIntersect","isPolyInPoly","disjoint","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","end","final","bear","calculateFinalBearing","lon1","lon2","destination","origin","longitude1","latitude1","bearingRad","latitude2","asin","closestPt","stop_1","sectionLength","heightDistance","perpendicularPt1","perpendicularPt2","intersectPt","location","index","cloneFeature","cloned","cloneProperties","cloneGeometry","item","deepSlice","cloneFeatureCollection","targetPoint","nearest","minDist","bestFeatureIndex","distanceToPoint","point1","point2","MapboxDraw","IDS","VERTICAL_GUIDE","HORIZONTAL_GUIDE","addPointToVertices","vertices","forceInclusion","getCanvas","project","createSnapList","draw","snapList","bboxAsPolygon","canvas","cUR","unproject","toArray","west","south","east","north","lowLeft","bboxPolygon","flat","addVerticesToVertices","isCurrentFeature","booleanDisjoint","getFeatureWithNearestPoint","nearestPointsOfEachFeature","nearestPointOnLine","calcClosestLayer","closestLayer","layer","nearestPoint","isMarker","isPolygon","isMultiPolygon","isMultiPoint","latlngs","latlng","np","nearestPointInPointSet","turfPoint","closestFeature","turfLineString","flatMap","calcLayerDistances","checkPrioritySnapping","snapOptions","snapVertexPriorityDistance","snapToPoint","distanceAC","distanceBC","closestVertexLatLng","shortestDistance","snapToMidPoints","midpoint","distanceMC","snapToLineOrPolygon","snap","state","minDistance","snapLatLng","latitude","zoomLevel","latitudeRadians","verticalPx","horizontalPx","verticals","horizontals","altKey","showVerticalSnapLine","showHorizontalSnapLine","snapPx","getZoom","guides","nearestGuideline","vertex","find","px","py","lngLatTop","lngLatBottom","verticalGuide","horizontalGuide","getGuideFeature","isSnapGuide","shouldHideGuide","DrawPoint","SnapPointMode","selectedFeatures","snapGetFeatures","moveendCallback","optionsChangedCallback","console","snappedLng","snappedLat","lastVertex","display","DrawLine","SnapLineMode","DrawPolygon","SnapPolygonMode","assign","overlap","userPolygon","edited","turf","difference","err","rc","Constants","DirectSelect","SnapDirectSelect","opts","delta","modifiedDefaultStyles","defaultStyle"],"sourceRoot":""}